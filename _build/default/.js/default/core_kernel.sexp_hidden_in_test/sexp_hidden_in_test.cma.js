// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.6.0

//# unitInfo: Provides: Sexp_hidden_in_test
//# unitInfo: Requires: Bin_prot__Common, Bin_prot__Shape, Core, Expect_test_collector, Expect_test_common__File, Expect_test_config, Inline_test_config, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib__Runtime, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst$1 = "",
    cst_7ce2ecb60c84f288a530286b07$1 = "7ce2ecb60c84f288a530286b076566de",
    cst_Sexp_hidden_in_test$0 = "Sexp_hidden_in_test",
    cst_a$3 = "a",
    cst_sexp_hidden_in_test$0 = "sexp_hidden_in_test",
    cst_sexp_hidden_in_test_src_se$14 =
      "sexp_hidden_in_test/src/sexp_hidden_in_test.ml",
    cst_t$3 = "t";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call8(f, a0, a1, a2, a3, a4, a5, a6, a7){
    return (f.l >= 0 ? f.l : f.l = f.length) == 8
            ? f(a0, a1, a2, a3, a4, a5, a6, a7)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6, a7]);
   }
   function caml_call9(f, a0, a1, a2, a3, a4, a5, a6, a7, a8){
    return (f.l >= 0 ? f.l : f.l = f.length) == 9
            ? f(a0, a1, a2, a3, a4, a5, a6, a7, a8)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6, a7, a8]);
   }
   var
    undef = undefined,
    global_data = runtime.caml_get_global_data(),
    cst = cst$1,
    cst$0 = cst$1,
    Core = global_data.Core,
    Expect_test_common_File = global_data.Expect_test_common__File,
    Expect_test_config = global_data.Expect_test_config,
    Expect_test_collector = global_data.Expect_test_collector,
    Inline_test_config = global_data.Inline_test_config,
    Bin_prot_Shape = global_data.Bin_prot__Shape,
    Bin_prot_Common = global_data.Bin_prot__Common,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_inline_test_lib_Runtime = global_data.Ppx_inline_test_lib__Runtime;
   caml_call1(Ppx_module_timer_runtime[4], cst_Sexp_hidden_in_test$0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_sexp_hidden_in_test$0);
   caml_call1(Expect_test_collector[5][1], cst_sexp_hidden_in_test_src_se$14);
   caml_call2(Ppx_inline_test_lib_Runtime[2], cst_sexp_hidden_in_test$0, cst);
   var
    cst_sexp_hidden_in_test_src_se$8 = cst_sexp_hidden_in_test_src_se$14,
    cst_sexp_hidden_in_test_src_se$3 = cst_sexp_hidden_in_test_src_se$14,
    cst_sexp_hidden_in_test_src_se$4 = cst_sexp_hidden_in_test_src_se$14,
    cst_sexp_hidden_in_test_src_se$5 = cst_sexp_hidden_in_test_src_se$14,
    _d_ = [1, " <hidden_in_test> "],
    _e_ = [0, cst$1],
    _f_ = [0, "Turned on"],
    cst_sexp_hidden_in_test_src_se$6 = cst_sexp_hidden_in_test_src_se$14,
    cst_sexp_hidden_in_test_src_se$7 = cst_sexp_hidden_in_test_src_se$14,
    cst_7ce2ecb60c84f288a530286b07 = cst_7ce2ecb60c84f288a530286b07$1,
    cst_sexp_hidden_in_test_src_se$9 = cst_sexp_hidden_in_test_src_se$14,
    cst_sexp_hidden_in_test_src_se$10 = cst_sexp_hidden_in_test_src_se$14,
    _g_ = [1, " 1024 "],
    _h_ = [0, cst$1],
    _i_ = [0, "Turned off"],
    cst_sexp_hidden_in_test_src_se$11 = cst_sexp_hidden_in_test_src_se$14,
    cst_sexp_hidden_in_test_src_se$12 = cst_sexp_hidden_in_test_src_se$14,
    cst_7ce2ecb60c84f288a530286b07$0 = cst_7ce2ecb60c84f288a530286b07$1,
    cst_t$2 = cst_t$3,
    _b_ = [0, "<hidden_in_test>"],
    _a_ = [5, "sexp_hidden_in_test/src/sexp_hidden_in_test.ml.Make.t"],
    cst_t$0 = cst_t$3,
    cst_a = cst_a$3,
    cst_sexp_hidden_in_test_src_se =
      "sexp_hidden_in_test/src/sexp_hidden_in_test.ml:7:14",
    cst_a$0 = cst_a$3,
    cst_t = cst_t$3,
    cst_sexp_hidden_in_test_src_se$0 =
      "sexp_hidden_in_test/src/sexp_hidden_in_test.ml:7:2",
    cst_a$1 = cst_a$3,
    cst_sexp_hidden_in_test_src_se$1 =
      "sexp_hidden_in_test/src/sexp_hidden_in_test.ml:14:23",
    cst_a$2 = cst_a$3,
    cst_t$1 = cst_t$3,
    cst_sexp_hidden_in_test_src_se$2 =
      "sexp_hidden_in_test/src/sexp_hidden_in_test.ml:14:4",
    cst_sexp_hidden_in_test_src_se$13 = cst_sexp_hidden_in_test_src_se$14,
    cst_sexp_hidden_in_test = cst_sexp_hidden_in_test$0,
    cst_Sexp_hidden_in_test = cst_Sexp_hidden_in_test$0;
   function Make(M){
    var
     _x_ = caml_call1(Bin_prot_Shape[3][1], cst_a),
     _y_ = caml_call1(Bin_prot_Shape[4][1], cst_sexp_hidden_in_test_src_se),
     _z_ = caml_call2(Bin_prot_Shape[15], _y_, _x_),
     _A_ = [0, caml_call1(Bin_prot_Shape[3][1], cst_a$0), 0],
     _B_ = [0, [0, caml_call1(Bin_prot_Shape[2][1], cst_t), _A_, _z_], 0],
     _C_ = caml_call1(Bin_prot_Shape[4][1], cst_sexp_hidden_in_test_src_se$0),
     group = caml_call2(Bin_prot_Shape[6], _C_, _B_);
    function bin_shape_t(a){
     var _V_ = caml_call1(Bin_prot_Shape[2][1], cst_t$0);
     return caml_call1(caml_call2(Bin_prot_Shape[14], group, _V_), [0, a, 0]);
    }
    function bin_size_t(size_of_a){return size_of_a;}
    function bin_write_t(write_a){return write_a;}
    function bin_writer_t(bin_writer_a){
     function _U_(v){return caml_call1(bin_writer_a[2], v);}
     return [0, function(v){return caml_call1(bin_writer_a[1], v);}, _U_];
    }
    function bin_read_t(of_a, buf, pos_ref, vint){
     return caml_call2(Bin_prot_Common[18], _a_, pos_ref[1]);
    }
    function bin_read_t$0(of_a){return of_a;}
    function bin_reader_t(bin_reader_a){
     function _T_(buf, pos_ref, vtag){
      return bin_read_t(bin_reader_a[1], buf, pos_ref, vtag);
     }
     return [0,
             function(buf, pos_ref){
              return caml_call2(bin_reader_a[1], buf, pos_ref);
             },
             _T_];
    }
    function bin_t(bin_a){
     var _R_ = bin_reader_t(bin_a[3]), _S_ = bin_writer_t(bin_a[2]);
     return [0, bin_shape_t(bin_a[1]), _S_, _R_];
    }
    function compare(cmp_a, a_001, b_002){
     return caml_call2(cmp_a, a_001, b_002);
    }
    function t_of_sexp(of_a_003){return of_a_003;}
    function sexp_of_t(sexp_of_a, a){
     return M[1] ? _b_ : caml_call1(sexp_of_a, a);
    }
    var
     _D_ = caml_call1(Bin_prot_Shape[3][1], cst_a$1),
     _E_ = caml_call1(Bin_prot_Shape[4][1], cst_sexp_hidden_in_test_src_se$1),
     _F_ = bin_shape_t(caml_call2(Bin_prot_Shape[15], _E_, _D_)),
     _G_ = [0, caml_call1(Bin_prot_Shape[3][1], cst_a$2), 0],
     _H_ = [0, [0, caml_call1(Bin_prot_Shape[2][1], cst_t$1), _G_, _F_], 0],
     _I_ = caml_call1(Bin_prot_Shape[4][1], cst_sexp_hidden_in_test_src_se$2),
     group$0 = caml_call2(Bin_prot_Shape[6], _I_, _H_);
    function bin_shape_t$0(a){
     var _Q_ = caml_call1(Bin_prot_Shape[2][1], cst_t$2);
     return caml_call1
             (caml_call2(Bin_prot_Shape[14], group$0, _Q_), [0, a, 0]);
    }
    function bin_size_t$0(size_of_a, v){return caml_call1(size_of_a, v);}
    function bin_write_t$0(write_a, buf, pos, v){return caml_call3(write_a, buf, pos, v);
    }
    function bin_writer_t$0(bin_writer_a){
     function _M_(v){
      var _N_ = bin_writer_a[2];
      return function(_O_, _P_){return bin_write_t$0(_N_, v, _O_, _P_);};
     }
     return [0, function(v){return bin_size_t$0(bin_writer_a[1], v);}, _M_];
    }
    function bin_read_t$1(of_a, buf, pos_ref, vint){return bin_read_t(of_a, buf, pos_ref, vint);
    }
    function bin_read_t$2(of_a, buf, pos_ref){return caml_call2(of_a, buf, pos_ref);
    }
    function bin_reader_t$0(bin_reader_a){
     function _L_(buf, pos_ref, vtag){
      return bin_read_t$1(bin_reader_a[1], buf, pos_ref, vtag);
     }
     return [0,
             function(buf, pos_ref){
              return bin_read_t$2(bin_reader_a[1], buf, pos_ref);
             },
             _L_];
    }
    function bin_t$0(bin_a){
     var _J_ = bin_reader_t$0(bin_a[3]), _K_ = bin_writer_t$0(bin_a[2]);
     return [0, bin_shape_t$0(bin_a[1]), _K_, _J_];
    }
    function compare$0(cmp_a, a_006, b_007){
     return compare
             (function(a_008, b_009){return caml_call2(cmp_a, a_008, b_009);},
              a_006,
              b_007);
    }
    var
     With_non_roundtripping_in_test =
       [0,
        bin_shape_t$0,
        bin_size_t$0,
        bin_write_t$0,
        bin_writer_t$0,
        bin_read_t$1,
        bin_read_t$2,
        bin_reader_t$0,
        bin_t$0,
        compare$0,
        t_of_sexp,
        sexp_of_t];
    return [0,
            bin_shape_t,
            bin_size_t,
            bin_write_t,
            bin_writer_t,
            bin_read_t,
            bin_read_t$0,
            bin_reader_t,
            bin_t,
            compare,
            ,
            sexp_of_t,
            With_non_roundtripping_in_test];
   }
   function _c_(param){
    var
     Sexp_hidden_in_test_turned_off = Make([0, 0]),
     Sexp_hidden_in_test_turned_on = Make([0, 1]),
     Expect_test_collector$0 =
       caml_call1(Expect_test_collector[2], Expect_test_config);
    function _j_(param){
     var _v_ = Sexp_hidden_in_test_turned_on[11].call(null, Core[356], 1024);
     caml_call2(Core[248], 0, _v_);
     var
      _w_ =
        [0,
         caml_call1
          (Expect_test_common_File[1][6], cst_sexp_hidden_in_test_src_se$3),
         38,
         949,
         957,
         963];
     return caml_call1(Expect_test_collector$0[1], _w_);
    }
    var
     _k_ =
       [0,
        caml_call1
         (Expect_test_common_File[1][6], cst_sexp_hidden_in_test_src_se$4),
        38,
        949,
        964,
        986],
     _l_ =
       [0,
        [0,
         _e_,
         _d_,
         [0,
          caml_call1
           (Expect_test_common_File[1][6], cst_sexp_hidden_in_test_src_se$5),
          38,
          949,
          957,
          963],
         _k_],
        0],
     _m_ =
       [0,
        caml_call1
         (Expect_test_common_File[1][6], cst_sexp_hidden_in_test_src_se$7),
        36,
        871,
        875,
        987],
     _n_ =
       caml_call1
        (Expect_test_common_File[4][3], cst_7ce2ecb60c84f288a530286b07);
    caml_call9
     (Expect_test_collector$0[3],
      _n_,
      _m_,
      cst_sexp_hidden_in_test_src_se$6,
      _f_,
      0,
      _l_,
      0,
      Inline_test_config,
      _j_);
    var
     Expect_test_collector$1 =
       caml_call1(Expect_test_collector[2], Expect_test_config);
    function _o_(param){
     var _t_ = Sexp_hidden_in_test_turned_off[11].call(null, Core[356], 1024);
     caml_call2(Core[248], 0, _t_);
     var
      _u_ =
        [0,
         caml_call1
          (Expect_test_common_File[1][6], cst_sexp_hidden_in_test_src_se$8),
         43,
         1078,
         1086,
         1092];
     return caml_call1(Expect_test_collector$1[1], _u_);
    }
    var
     _p_ =
       [0,
        caml_call1
         (Expect_test_common_File[1][6], cst_sexp_hidden_in_test_src_se$9),
        43,
        1078,
        1093,
        1103],
     _q_ =
       [0,
        [0,
         _h_,
         _g_,
         [0,
          caml_call1
           (Expect_test_common_File[1][6], cst_sexp_hidden_in_test_src_se$10),
          43,
          1078,
          1086,
          1092],
         _p_],
        0],
     _r_ =
       [0,
        caml_call1
         (Expect_test_common_File[1][6], cst_sexp_hidden_in_test_src_se$12),
        41,
        996,
        1000,
        1104],
     _s_ =
       caml_call1
        (Expect_test_common_File[4][3], cst_7ce2ecb60c84f288a530286b07$0);
    caml_call9
     (Expect_test_collector$1[3],
      _s_,
      _r_,
      cst_sexp_hidden_in_test_src_se$11,
      _i_,
      0,
      _q_,
      0,
      Inline_test_config,
      _o_);
    return 0;
   }
   caml_call8
    (Ppx_inline_test_lib_Runtime[6],
     Inline_test_config,
     cst$0,
     0,
     cst_sexp_hidden_in_test_src_se$13,
     18,
     0,
     741,
     _c_);
   var
    am_running_test = Core[541],
    include = Make([0, am_running_test]),
    bin_shape_t = include[1],
    bin_size_t = include[2],
    bin_write_t = include[3],
    bin_writer_t = include[4],
    bin_read_t = include[5],
    bin_read_t$0 = include[6],
    bin_reader_t = include[7],
    bin_t = include[8],
    compare = include[9],
    sexp_of_t = include[11],
    With_non_roundtripping_in_test = include[12];
   caml_call1(Ppx_inline_test_lib_Runtime[3], cst_sexp_hidden_in_test);
   caml_call1(Expect_test_collector[5][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Sexp_hidden_in_test);
   var
    Sexp_hidden_in_test =
      [0,
       bin_shape_t,
       bin_size_t,
       bin_write_t,
       bin_read_t$0,
       bin_read_t,
       bin_writer_t,
       bin_reader_t,
       bin_t,
       compare,
       sexp_of_t,
       [0,
        With_non_roundtripping_in_test[1],
        With_non_roundtripping_in_test[2],
        With_non_roundtripping_in_test[3],
        With_non_roundtripping_in_test[6],
        With_non_roundtripping_in_test[5],
        With_non_roundtripping_in_test[4],
        With_non_roundtripping_in_test[7],
        With_non_roundtripping_in_test[8],
        With_non_roundtripping_in_test[9],
        With_non_roundtripping_in_test[10],
        With_non_roundtripping_in_test[11]]];
   runtime.caml_register_global
    (51, Sexp_hidden_in_test, cst_Sexp_hidden_in_test$0);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLjAsImZpbGUiOiJzZXhwX2hpZGRlbl9pbl90ZXN0LmNtYS5qcyIsInNvdXJjZVJvb3QiOiIiLCJuYW1lcyI6WyJncm91cCIsImJpbl9zaGFwZV90IiwiYSIsImJpbl9zaXplX3QiLCJzaXplX29mX2EiLCJiaW5fd3JpdGVfdCIsIndyaXRlX2EiLCJiaW5fd3JpdGVyX3QiLCJiaW5fd3JpdGVyX2EiLCJ2IiwiYmluX3JlYWRfdCIsIm9mX2EiLCJidWYiLCJwb3NfcmVmIiwidmludCIsImJpbl9yZWFkX3QkMCIsImJpbl9yZWFkZXJfdCIsImJpbl9yZWFkZXJfYSIsInZ0YWciLCJiaW5fdCIsImJpbl9hIiwiY29tcGFyZSIsImNtcF9hIiwiYV8wMDEiLCJiXzAwMiIsInRfb2Zfc2V4cCIsIm9mX2FfMDAzIiwic2V4cF9vZl90Iiwic2V4cF9vZl9hIiwiZ3JvdXAkMCIsImJpbl9zaGFwZV90JDAiLCJiaW5fc2l6ZV90JDAiLCJiaW5fd3JpdGVfdCQwIiwicG9zIiwiYmluX3dyaXRlcl90JDAiLCJiaW5fcmVhZF90JDEiLCJiaW5fcmVhZF90JDIiLCJiaW5fcmVhZGVyX3QkMCIsImJpbl90JDAiLCJjb21wYXJlJDAiLCJhXzAwNiIsImJfMDA3IiwiYV8wMDgiLCJiXzAwOSIsImFtX3J1bm5pbmdfdGVzdCJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdmlzaG51cy8ub3BhbS9ncnYtdGVzdC9saWIvY29yZV9rZXJuZWwvc2V4cF9oaWRkZW5faW5fdGVzdC9zZXhwX2hpZGRlbl9pbl90ZXN0Lm1sIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Rzs7Ozs7Rzs7Ozs7Rzs7Ozs7Rzs7Ozs7Rzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBTVU7Ozs7S0FBQSxVQUFBO0tBQVIsY0FBUTtLQUFSLE1BQUE7S0FBQUEsUUFBQTtJQUFRLFNBQUFDLFlBQUFDO0tBQVIsVUFBQTtLQUFBLE9BQUEsV0FBQSwrQkFBQUYs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QUFBQztJQUFBRztJQUFBRTtJQUVJTTs7Ozs7Ozs7O09BRkkxQjtPQUFSRTtPQUFBRTtPQUFBVTtPQUFBTDtPQUFBSDtPQUFBUztPQUFBRztPQUFBRTtPQUVJTTs7Ozs7Ozs7Ozs7Ozs7OztFIiwic291cmNlc0NvbnRlbnQiOlsib3BlbiEgQ29yZVxuXG5tb2R1bGUgTWFrZSAoTSA6IHNpZ1xuICAgIHZhbCBhbV9ydW5uaW5nX3Rlc3QgOiBib29sXG4gIGVuZCkgPVxuc3RydWN0XG4gIHR5cGUgJ2EgdCA9ICdhIFtAQGRlcml2aW5nIGJpbl9pbywgY29tcGFyZSwgc2V4cF1cblxuICBsZXQgc2V4cF9vZl90IHNleHBfb2ZfYSBhID1cbiAgICBpZiBNLmFtX3J1bm5pbmdfdGVzdCB0aGVuIFNleHAuQXRvbSBcIjxoaWRkZW5faW5fdGVzdD5cIiBlbHNlIHNleHBfb2ZfYSBhXG4gIDs7XG5cbiAgbW9kdWxlIFdpdGhfbm9uX3JvdW5kdHJpcHBpbmdfaW5fdGVzdF9vZl9zZXhwID0gc3RydWN0XG4gICAgdHlwZSBub25yZWMgJ2EgdCA9ICdhIHQgW0BAZGVyaXZpbmcgYmluX2lvLCBjb21wYXJlLCBzZXhwXVxuICBlbmRcbmVuZFxuXG5sZXQldGVzdF9tb2R1bGUgXyA9XG4gIChtb2R1bGUgc3RydWN0XG4gICAgbW9kdWxlIFR1cm5lZF9vZmYgPSBzdHJ1Y3RcbiAgICAgIG1vZHVsZSBTZXhwX2hpZGRlbl9pbl90ZXN0X3R1cm5lZF9vZmYgPSBNYWtlIChzdHJ1Y3RcbiAgICAgICAgICBsZXQgYW1fcnVubmluZ190ZXN0ID0gZmFsc2VcbiAgICAgICAgZW5kKVxuXG4gICAgICB0eXBlIG5vbnJlYyB0ID0gaW50IFNleHBfaGlkZGVuX2luX3Rlc3RfdHVybmVkX29mZi50IFtAQGRlcml2aW5nIHNleHBfb2ZdXG4gICAgZW5kXG5cbiAgICBtb2R1bGUgVHVybmVkX29uID0gc3RydWN0XG4gICAgICBtb2R1bGUgU2V4cF9oaWRkZW5faW5fdGVzdF90dXJuZWRfb24gPSBNYWtlIChzdHJ1Y3RcbiAgICAgICAgICBsZXQgYW1fcnVubmluZ190ZXN0ID0gdHJ1ZVxuICAgICAgICBlbmQpXG5cbiAgICAgIHR5cGUgbm9ucmVjIHQgPSBpbnQgU2V4cF9oaWRkZW5faW5fdGVzdF90dXJuZWRfb24udCBbQEBkZXJpdmluZyBzZXhwX29mXVxuICAgIGVuZFxuXG4gICAgbGV0JWV4cGVjdF90ZXN0IFwiVHVybmVkIG9uXCIgPVxuICAgICAgcHJpbnRfcyBbJXNleHAgKDEwMjQgOiBUdXJuZWRfb24udCldO1xuICAgICAgWyVleHBlY3Qge3wgPGhpZGRlbl9pbl90ZXN0PiB8fV1cbiAgICA7O1xuXG4gICAgbGV0JWV4cGVjdF90ZXN0IFwiVHVybmVkIG9mZlwiID1cbiAgICAgIHByaW50X3MgKFslc2V4cF9vZjogVHVybmVkX29mZi50XSAxMDI0KTtcbiAgICAgIFslZXhwZWN0IHt8IDEwMjQgfH1dXG4gICAgOztcbiAgZW5kKVxuOztcblxuaW5jbHVkZSBNYWtlIChzdHJ1Y3RcbiAgICBsZXQgYW1fcnVubmluZ190ZXN0ID0gYW1fcnVubmluZ190ZXN0XG4gIGVuZClcbiJdfQ==
