// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.6.0

//# unitInfo: Provides: Virtual_dom__
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime, Virtual_dom = [0];
   runtime.caml_register_global(0, Virtual_dom, "Virtual_dom__");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Virtual_dom__Dom_float
//# unitInfo: Requires: Core, Core__Float, Expect_test_collector, Expect_test_common__File, Expect_test_config, Inline_test_config, Js_of_ocaml__Js, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib__Runtime, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst$0 = "",
    cst_Virtual_dom_Dom_float$0 = "Virtual_dom__Dom_float",
    cst_src_dom_float_ml$22 = "src/dom_float.ml",
    cst_virtual_dom$0 = "virtual_dom",
    caml_string_of_jsstring = runtime.caml_string_of_jsstring;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call9(f, a0, a1, a2, a3, a4, a5, a6, a7, a8){
    return (f.l >= 0 ? f.l : f.l = f.length) == 9
            ? f(a0, a1, a2, a3, a4, a5, a6, a7, a8)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6, a7, a8]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst = cst$0,
    Core = global_data.Core,
    Expect_test_common_File = global_data.Expect_test_common__File,
    Core_Float = global_data.Core__Float,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib_Runtime = global_data.Ppx_inline_test_lib__Runtime,
    Expect_test_config = global_data.Expect_test_config,
    Inline_test_config = global_data.Inline_test_config;
   caml_call1(Ppx_module_timer_runtime[4], cst_Virtual_dom_Dom_float$0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_virtual_dom$0);
   caml_call1(Expect_test_collector[5][1], cst_src_dom_float_ml$22);
   caml_call2(Ppx_inline_test_lib_Runtime[2], cst_virtual_dom$0, cst);
   var
    _b_ = [0, [2, 0, 0], "%s"],
    cst_src_dom_float_ml = cst_src_dom_float_ml$22,
    cst_src_dom_float_ml$0 = cst_src_dom_float_ml$22,
    cst_src_dom_float_ml$1 = cst_src_dom_float_ml$22,
    cst_src_dom_float_ml$2 = cst_src_dom_float_ml$22,
    cst_src_dom_float_ml$3 = cst_src_dom_float_ml$22,
    cst_src_dom_float_ml$4 = cst_src_dom_float_ml$22,
    cst_src_dom_float_ml$5 = cst_src_dom_float_ml$22,
    cst_src_dom_float_ml$6 = cst_src_dom_float_ml$22,
    cst_src_dom_float_ml$7 = cst_src_dom_float_ml$22,
    _d_ = [1, " 1 "],
    _e_ = [0, cst$0],
    cst_src_dom_float_ml$8 = cst_src_dom_float_ml$22,
    cst_src_dom_float_ml$9 = cst_src_dom_float_ml$22,
    _h_ = [1, " NaN "],
    _i_ = [0, cst$0],
    cst_src_dom_float_ml$10 = cst_src_dom_float_ml$22,
    cst_src_dom_float_ml$11 = cst_src_dom_float_ml$22,
    _l_ = [1, " Infinity "],
    _m_ = [0, cst$0],
    cst_src_dom_float_ml$12 = cst_src_dom_float_ml$22,
    cst_src_dom_float_ml$13 = cst_src_dom_float_ml$22,
    _p_ = [1, " -Infinity "],
    _q_ = [0, cst$0],
    cst_src_dom_float_ml$14 = cst_src_dom_float_ml$22,
    cst_src_dom_float_ml$15 = cst_src_dom_float_ml$22,
    _t_ = [1, " 1e-8 "],
    _u_ = [0, cst$0],
    cst_src_dom_float_ml$16 = cst_src_dom_float_ml$22,
    cst_src_dom_float_ml$17 = cst_src_dom_float_ml$22,
    _x_ = [1, " -1 "],
    _y_ = [0, cst$0],
    cst_src_dom_float_ml$18 = cst_src_dom_float_ml$22,
    cst_src_dom_float_ml$19 = cst_src_dom_float_ml$22,
    _B_ = [1, " 1.0000001 "],
    _C_ = [0, cst$0],
    cst_src_dom_float_ml$20 = cst_src_dom_float_ml$22,
    cst_src_dom_float_ml$21 = cst_src_dom_float_ml$22,
    cst_e40141a8c595182b4ac2018c0f = "e40141a8c595182b4ac2018c0f4b5904",
    cst_virtual_dom = cst_virtual_dom$0,
    cst_Virtual_dom_Dom_float = cst_Virtual_dom_Dom_float$0;
   function to_js_string(value){return value.toString();}
   function to_js_string_fixed(digits, value){return value.toFixed(digits);}
   function to_js_string_precision(digits, value){return value.toPrecision(digits);
   }
   function to_js_string_exponential(value){return value.toExponential();}
   function to_string(value){
    return caml_string_of_jsstring(value.toString());
   }
   function to_string_fixed(digits, value){
    return caml_string_of_jsstring(value.toFixed(digits));
   }
   function to_string_precision(digits, value){
    return caml_string_of_jsstring(value.toPrecision(digits));
   }
   function to_string_exponential(value){
    return caml_string_of_jsstring(value.toExponential());
   }
   var
    Expect_test_collector$0 =
      caml_call1(Expect_test_collector[2], Expect_test_config);
   function _a_(param){
    function print(f){
     var _N_ = to_string(f);
     return caml_call2(Core[250], _b_, _N_);
    }
    print(1.);
    var
     _G_ =
       [0,
        caml_call1(Expect_test_common_File[1][6], cst_src_dom_float_ml),
        16,
        738,
        742,
        748];
    caml_call1(Expect_test_collector$0[1], _G_);
    print(Core_Float[9]);
    var
     _H_ =
       [0,
        caml_call1(Expect_test_common_File[1][6], cst_src_dom_float_ml$0),
        18,
        778,
        782,
        788];
    caml_call1(Expect_test_collector$0[1], _H_);
    print(Core_Float[10]);
    var
     _I_ =
       [0,
        caml_call1(Expect_test_common_File[1][6], cst_src_dom_float_ml$1),
        20,
        825,
        829,
        835];
    caml_call1(Expect_test_collector$0[1], _I_);
    print(Core_Float[11]);
    var
     _J_ =
       [0,
        caml_call1(Expect_test_common_File[1][6], cst_src_dom_float_ml$2),
        22,
        881,
        885,
        891];
    caml_call1(Expect_test_collector$0[1], _J_);
    print(1e-8);
    var
     _K_ =
       [0,
        caml_call1(Expect_test_common_File[1][6], cst_src_dom_float_ml$3),
        24,
        930,
        934,
        940];
    caml_call1(Expect_test_collector$0[1], _K_);
    print(-1.);
    var
     _L_ =
       [0,
        caml_call1(Expect_test_common_File[1][6], cst_src_dom_float_ml$4),
        26,
        969,
        973,
        979];
    caml_call1(Expect_test_collector$0[1], _L_);
    print(1.0000001);
    var
     _M_ =
       [0,
        caml_call1(Expect_test_common_File[1][6], cst_src_dom_float_ml$5),
        28,
        1010,
        1014,
        1020];
    return caml_call1(Expect_test_collector$0[1], _M_);
   }
   var
    _c_ =
      [0,
       caml_call1(Expect_test_common_File[1][6], cst_src_dom_float_ml$6),
       16,
       738,
       749,
       756],
    _f_ =
      [0,
       [0,
        _e_,
        _d_,
        [0,
         caml_call1(Expect_test_common_File[1][6], cst_src_dom_float_ml$7),
         16,
         738,
         742,
         748],
        _c_],
       0],
    _g_ =
      [0,
       caml_call1(Expect_test_common_File[1][6], cst_src_dom_float_ml$8),
       18,
       778,
       789,
       798],
    _j_ =
      [0,
       [0,
        _i_,
        _h_,
        [0,
         caml_call1(Expect_test_common_File[1][6], cst_src_dom_float_ml$9),
         18,
         778,
         782,
         788],
        _g_],
       _f_],
    _k_ =
      [0,
       caml_call1(Expect_test_common_File[1][6], cst_src_dom_float_ml$10),
       20,
       825,
       836,
       850],
    _n_ =
      [0,
       [0,
        _m_,
        _l_,
        [0,
         caml_call1(Expect_test_common_File[1][6], cst_src_dom_float_ml$11),
         20,
         825,
         829,
         835],
        _k_],
       _j_],
    _o_ =
      [0,
       caml_call1(Expect_test_common_File[1][6], cst_src_dom_float_ml$12),
       22,
       881,
       892,
       907],
    _r_ =
      [0,
       [0,
        _q_,
        _p_,
        [0,
         caml_call1(Expect_test_common_File[1][6], cst_src_dom_float_ml$13),
         22,
         881,
         885,
         891],
        _o_],
       _n_],
    _s_ =
      [0,
       caml_call1(Expect_test_common_File[1][6], cst_src_dom_float_ml$14),
       24,
       930,
       941,
       951],
    _v_ =
      [0,
       [0,
        _u_,
        _t_,
        [0,
         caml_call1(Expect_test_common_File[1][6], cst_src_dom_float_ml$15),
         24,
         930,
         934,
         940],
        _s_],
       _r_],
    _w_ =
      [0,
       caml_call1(Expect_test_common_File[1][6], cst_src_dom_float_ml$16),
       26,
       969,
       980,
       988],
    _z_ =
      [0,
       [0,
        _y_,
        _x_,
        [0,
         caml_call1(Expect_test_common_File[1][6], cst_src_dom_float_ml$17),
         26,
         969,
         973,
         979],
        _w_],
       _v_],
    _A_ =
      [0,
       caml_call1(Expect_test_common_File[1][6], cst_src_dom_float_ml$18),
       28,
       1010,
       1021,
       1036],
    _D_ =
      [0,
       [0,
        _C_,
        _B_,
        [0,
         caml_call1(Expect_test_common_File[1][6], cst_src_dom_float_ml$19),
         28,
         1010,
         1014,
         1020],
        _A_],
       _z_],
    _E_ =
      [0,
       caml_call1(Expect_test_common_File[1][6], cst_src_dom_float_ml$21),
       12,
       642,
       642,
       1037],
    _F_ =
      caml_call1
       (Expect_test_common_File[4][3], cst_e40141a8c595182b4ac2018c0f);
   caml_call9
    (Expect_test_collector$0[3],
     _F_,
     _E_,
     cst_src_dom_float_ml$20,
     0,
     0,
     _D_,
     0,
     Inline_test_config,
     _a_);
   caml_call1(Ppx_inline_test_lib_Runtime[3], cst_virtual_dom);
   caml_call1(Expect_test_collector[5][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Virtual_dom_Dom_float);
   var
    Virtual_dom_Dom_float =
      [0,
       to_js_string,
       to_js_string_fixed,
       to_js_string_precision,
       to_js_string_exponential,
       to_string,
       to_string_fixed,
       to_string_precision,
       to_string_exponential];
   runtime.caml_register_global
    (63, Virtual_dom_Dom_float, cst_Virtual_dom_Dom_float$0);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Virtual_dom__Effect
//# unitInfo: Requires: Base__Hashtbl, Base__List, Base__Option, Expect_test_collector, Js_of_ocaml__Dom, Js_of_ocaml__Dom_html, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib__Runtime, Ppx_module_timer_runtime, Stdlib__Obj, Ui_effect
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Virtual_dom_Effect$0 = "Virtual_dom__Effect",
    cst_virtual_dom$0 = "virtual_dom",
    caml_fresh_oo_id = runtime.caml_fresh_oo_id;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst = "",
    Js_of_ocaml_Dom = global_data.Js_of_ocaml__Dom,
    Base_Option = global_data.Base__Option,
    Js_of_ocaml_Dom_html = global_data.Js_of_ocaml__Dom_html,
    Base_List = global_data.Base__List,
    Ui_effect = global_data.Ui_effect,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib_Runtime = global_data.Ppx_inline_test_lib__Runtime,
    Stdlib_Obj = global_data.Stdlib__Obj,
    Base_Hashtbl = global_data.Base__Hashtbl;
   caml_call1(Ppx_module_timer_runtime[4], cst_Virtual_dom_Effect$0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_virtual_dom$0);
   caml_call1(Expect_test_collector[5][1], "src/effect.ml");
   caml_call2(Ppx_inline_test_lib_Runtime[2], cst_virtual_dom$0, cst);
   var
    Ignore = Ui_effect[1],
    Many = Ui_effect[2],
    symbol_bind = Ui_effect[3],
    symbol_map = Ui_effect[4],
    bind = Ui_effect[6],
    return$0 = Ui_effect[7],
    map = Ui_effect[8],
    join = Ui_effect[9],
    ignore_m = Ui_effect[10],
    all = Ui_effect[11],
    all_unit = Ui_effect[12],
    never = Ui_effect[14],
    lazy = Ui_effect[15],
    print_s = Ui_effect[16],
    of_sync_fun = Ui_effect[17],
    Expert = Ui_effect[20],
    visibility_handlers = [0, 0],
    cst_Virtual_dom_Effect_Viewpor = "Virtual_dom__Effect.Viewport_changed",
    cst_Virtual_dom_Effect_Stop_pr = "Virtual_dom__Effect.Stop_propagation",
    cst_Virtual_dom_Effect_Stop_im =
      "Virtual_dom__Effect.Stop_immediate_propagation",
    cst_Virtual_dom_Effect_Prevent = "Virtual_dom__Effect.Prevent_default",
    cst_virtual_dom = cst_virtual_dom$0,
    cst_Virtual_dom_Effect = cst_Virtual_dom_Effect$0;
   function Define_visibility(VH){
    visibility_handlers[1] = [0, VH[1], visibility_handlers[1]];
    return [0];
   }
   var
    Viewport_changed =
      [248, cst_Virtual_dom_Effect_Viewpor, caml_fresh_oo_id(0)],
    Stop_propagation =
      [248, cst_Virtual_dom_Effect_Stop_pr, caml_fresh_oo_id(0)],
    Stop_immediate_propagation =
      [248, cst_Virtual_dom_Effect_Stop_im, caml_fresh_oo_id(0)],
    Prevent_default =
      [248, cst_Virtual_dom_Effect_Prevent, caml_fresh_oo_id(0)];
   function sequence_as_sibling(left, unless_stopped){
    function contains_stop(param){
     if(param[1] !== Many)
      return param === Stop_immediate_propagation ? 1 : 0;
     var es = param[2];
     return caml_call2(Base_List[13], es, contains_stop);
    }
    if(contains_stop(left)) return left;
    var _k_ = [0, left, [0, caml_call1(unless_stopped, 0), 0]];
    return [0, Ui_effect[2], _k_];
   }
   var current_dom_event = [0, 0];
   function _a_(param){
    function _j_(f){return caml_call1(f, 0);}
    return caml_call2(Base_List[9], visibility_handlers[1], _j_);
   }
   var
    _b_ = caml_call1(Stdlib_Obj[23][1], Viewport_changed),
    _c_ = caml_call1(Stdlib_Obj[23][3], _b_);
   caml_call3(Base_Hashtbl[36], Expert[2], _c_, _a_);
   function _d_(param){
    return caml_call2
            (Base_Option[34], current_dom_event[1], Js_of_ocaml_Dom_html[116]);
   }
   var
    _e_ = caml_call1(Stdlib_Obj[23][1], Stop_propagation),
    _f_ = caml_call1(Stdlib_Obj[23][3], _e_);
   caml_call3(Base_Hashtbl[36], Expert[2], _f_, _d_);
   function _g_(param){
    return caml_call2
            (Base_Option[34], current_dom_event[1], Js_of_ocaml_Dom[18]);
   }
   var
    _h_ = caml_call1(Stdlib_Obj[23][1], Prevent_default),
    _i_ = caml_call1(Stdlib_Obj[23][3], _h_);
   caml_call3(Base_Hashtbl[36], Expert[2], _i_, _g_);
   var handle_non_dom_event_exn = Expert[1];
   function handle(dom_event, event){
    var old = current_dom_event[1];
    current_dom_event[1] = [0, dom_event];
    caml_call1(Expert[1], event);
    current_dom_event[1] = old;
    return 0;
   }
   caml_call1(Ppx_inline_test_lib_Runtime[3], cst_virtual_dom);
   caml_call1(Expect_test_collector[5][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Virtual_dom_Effect);
   var
    Virtual_dom_Effect =
      [0,
       Ignore,
       Many,
       symbol_bind,
       symbol_map,
       bind,
       return$0,
       map,
       join,
       ignore_m,
       all,
       all_unit,
       never,
       lazy,
       print_s,
       of_sync_fun,
       Viewport_changed,
       Stop_propagation,
       Stop_immediate_propagation,
       Prevent_default,
       sequence_as_sibling,
       Define_visibility,
       [0, handle, handle_non_dom_event_exn]];
   runtime.caml_register_global
    (22, Virtual_dom_Effect, cst_Virtual_dom_Effect$0);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Virtual_dom__Gen_js_api
//# unitInfo: Requires: Expect_test_collector, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib__Runtime, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Virtual_dom_Gen_js_api = "Virtual_dom__Gen_js_api",
    cst_virtual_dom = "virtual_dom";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst = "",
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib_Runtime = global_data.Ppx_inline_test_lib__Runtime;
   caml_call1(Ppx_module_timer_runtime[4], cst_Virtual_dom_Gen_js_api);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_virtual_dom);
   caml_call1(Expect_test_collector[5][1], "src/gen_js_api.ml");
   caml_call2(Ppx_inline_test_lib_Runtime[2], cst_virtual_dom, cst);
   caml_call1(Ppx_inline_test_lib_Runtime[3], cst_virtual_dom);
   caml_call1(Expect_test_collector[5][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Virtual_dom_Gen_js_api);
   var Virtual_dom_Gen_js_api = [0];
   runtime.caml_register_global
    (11, Virtual_dom_Gen_js_api, cst_Virtual_dom_Gen_js_api);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Virtual_dom__Hooks_intf
//# unitInfo: Requires: Expect_test_collector, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib__Runtime, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Virtual_dom_Hooks_intf = "Virtual_dom__Hooks_intf",
    cst_virtual_dom = "virtual_dom";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst = "",
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib_Runtime = global_data.Ppx_inline_test_lib__Runtime;
   caml_call1(Ppx_module_timer_runtime[4], cst_Virtual_dom_Hooks_intf);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_virtual_dom);
   caml_call1(Expect_test_collector[5][1], "src/hooks_intf.ml");
   caml_call2(Ppx_inline_test_lib_Runtime[2], cst_virtual_dom, cst);
   caml_call1(Ppx_inline_test_lib_Runtime[3], cst_virtual_dom);
   caml_call1(Expect_test_collector[5][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Virtual_dom_Hooks_intf);
   var Virtual_dom_Hooks_intf = [0];
   runtime.caml_register_global
    (11, Virtual_dom_Hooks_intf, cst_Virtual_dom_Hooks_intf);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Virtual_dom__Hooks
//# unitInfo: Requires: CamlinternalLazy, Core, Core__Type_equal, Expect_test_collector, Js_of_ocaml__Dom_html, Js_of_ocaml__Js, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib__Runtime, Ppx_module_timer_runtime, Sexplib0__Sexp_conv
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst$2 = "",
    cst_Virtual_dom_Hooks$0 = "Virtual_dom__Hooks",
    cst_virtual_dom$0 = "virtual_dom",
    caml_js_wrap_callback = runtime.caml_js_wrap_callback;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst$0 = cst$2,
    cst$1 = cst$2,
    cst = cst$2,
    Core = global_data.Core,
    Core_Type_equal = global_data.Core__Type_equal,
    Sexplib0_Sexp_conv = global_data.Sexplib0__Sexp_conv,
    CamlinternalLazy = global_data.CamlinternalLazy,
    Js_of_ocaml_Js = global_data.Js_of_ocaml__Js,
    Js_of_ocaml_Dom_html = global_data.Js_of_ocaml__Dom_html,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib_Runtime = global_data.Ppx_inline_test_lib__Runtime;
   caml_call1(Ppx_module_timer_runtime[4], cst_Virtual_dom_Hooks$0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_virtual_dom$0);
   caml_call1(Expect_test_collector[5][1], "src/hooks.ml");
   caml_call2(Ppx_inline_test_lib_Runtime[2], cst_virtual_dom$0, cst);
   var
    cst_hooks_do_not_have_the_same =
      "hooks do not have the same type, so they cannot be combined; taking the second of the two",
    cst_virtual_dom = cst_virtual_dom$0,
    cst_Virtual_dom_Hooks = cst_Virtual_dom_Hooks$0;
   function sexp_of_t(param){
    var value = param[2], type_id = param[1];
    return caml_call2(Core_Type_equal[8][6], type_id, value);
   }
   var
    Extra = [0, sexp_of_t],
    generic_hook =
      [246, function(param){return Js_of_ocaml_Js[52][1].GenericHook;}];
   function pack(param){
    var
     id = param[7],
     destroy = param[6],
     update = param[5],
     init = param[4],
     input_id = param[2],
     input = param[1],
     init$0 = caml_js_wrap_callback(caml_call1(init, input)),
     update$0 = caml_js_wrap_callback(caml_call1(update, input)),
     destroy$0 = caml_js_wrap_callback(destroy),
     _j_ = runtime.caml_obj_tag(generic_hook);
    a:
    if(250 === _j_)
     var generic_hook$0 = generic_hook[1];
    else{
     if(246 !== _j_ && 244 !== _j_){
      var generic_hook$0 = generic_hook;
      break a;
     }
     var generic_hook$0 = caml_call1(CamlinternalLazy[2], generic_hook);
    }
    var extra = [0, input_id, input];
    return generic_hook$0(init$0, update$0, destroy$0, id, extra);
   }
   function combine(left, right){
    if(caml_call2(Core_Type_equal[8][9], left[2], right[2])){
     var
      _c_ = right[7],
      _d_ = right[6],
      _e_ = right[5],
      _f_ = right[4],
      _g_ = right[3],
      _h_ = right[2];
     return [0,
             caml_call2(right[3], left[1], right[1]),
             _h_,
             _g_,
             _f_,
             _e_,
             _d_,
             _c_];
    }
    var
     _i_ = caml_call1(Sexplib0_Sexp_conv[7], cst_hooks_do_not_have_the_same);
    caml_call2(Core[249], 0, _i_);
    return right;
   }
   caml_call1(Ppx_inline_test_lib_Runtime[3], cst_virtual_dom);
   caml_call1(Expect_test_collector[5][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Virtual_dom_Hooks);
   var
    _a_ = [0, Extra],
    Virtual_dom_Hooks =
      [0,
       combine,
       pack,
       function(S){
        function _b_(param){
         var
          arg1_002 = param[3],
          arg0_001 = param[1],
          res0_003 = caml_call1(S[2][1], arg0_001),
          res1_004 = caml_call1(Core[150], arg1_002);
         return [1, [0, res0_003, [0, res1_004, 0]]];
        }
        var
         input_and_state_id = caml_call2(Core_Type_equal[8][3], cst$0, _b_),
         input_id = caml_call2(Core_Type_equal[8][3], cst$1, S[2][1]);
        function init(input, element){
         var state = caml_call2(S[3], input, element);
         function f(param){return caml_call3(S[4], input, state, element);}
         var
          animation_id =
            Js_of_ocaml_Dom_html[8].requestAnimationFrame
             (caml_js_wrap_callback(f));
         return [0, input, animation_id, state];
        }
        function update(input, param, element){
         var state = param[3], animation_id = param[2], old_input = param[1];
         caml_call4(S[5], old_input, input, state, element);
         return [0, input, animation_id, state];
        }
        function destroy(param, element){
         var state = param[3], animation_id = param[2], old_input = param[1];
         Js_of_ocaml_Dom_html[8].cancelAnimationFrame(animation_id);
         return caml_call3(S[6], old_input, state, element);
        }
        function create(input){
         var combine_inputs = S[2][2];
         return [0,
                 input,
                 input_id,
                 combine_inputs,
                 init,
                 update,
                 destroy,
                 input_and_state_id];
        }
        var For_testing = [0, input_id];
        return [0, create, For_testing];
       },
       _a_];
   runtime.caml_register_global
    (23, Virtual_dom_Hooks, cst_Virtual_dom_Hooks$0);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Virtual_dom__Js_map
//# unitInfo: Requires: Expect_test_collector, Ojs, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib__Runtime, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Virtual_dom_Js_map$0 = "Virtual_dom__Js_map",
    cst_virtual_dom$0 = "virtual_dom";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst = "",
    Ojs = global_data.Ojs,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib_Runtime = global_data.Ppx_inline_test_lib__Runtime;
   caml_call1(Ppx_module_timer_runtime[4], cst_Virtual_dom_Js_map$0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_virtual_dom$0);
   caml_call1(Expect_test_collector[5][1], "src/js_map.ml");
   caml_call2(Ppx_inline_test_lib_Runtime[2], cst_virtual_dom$0, cst);
   var
    cst_virtual_dom = cst_virtual_dom$0,
    cst_Virtual_dom_Js_map = cst_Virtual_dom_Js_map$0;
   function create(param){return new Ojs[19]["Map"];}
   function set(x7, x5, x6){x7.set(x5, x6); return 0;}
   function get(x11, x10){
    var _a_ = x11.get(x10);
    function _b_(_c_){return _c_;}
    return caml_call2(Ojs[7], _b_, _a_);
   }
   function delete$0(x16, x15){x16.delete(x15); return 0;}
   caml_call1(Ppx_inline_test_lib_Runtime[3], cst_virtual_dom);
   caml_call1(Expect_test_collector[5][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Virtual_dom_Js_map);
   var Virtual_dom_Js_map = [0, create, set, get, delete$0];
   runtime.caml_register_global
    (16, Virtual_dom_Js_map, cst_Virtual_dom_Js_map$0);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Virtual_dom__Raw
//# unitInfo: Requires: Base, Base__Type_equal, Expect_test_collector, Js_of_ocaml__Js, Ojs, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib__Runtime, Ppx_module_timer_runtime, Sexplib0__Sexp_conv, Virtual_dom__Js_map
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_VirtualDom = "VirtualDom",
    cst_Virtual_dom_Raw$0 = "Virtual_dom__Raw",
    cst_attributes$0 = "attributes",
    cst_virtual_dom$0 = "virtual_dom",
    caml_js_from_string = runtime.caml_js_from_string,
    caml_js_set = runtime.caml_js_set,
    caml_js_wrap_callback = runtime.caml_js_wrap_callback;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   var
    undef = undefined,
    global_data = runtime.caml_get_global_data(),
    cst = "",
    Base_Type_equal = global_data.Base__Type_equal,
    Virtual_dom_Js_map = global_data.Virtual_dom__Js_map,
    Base = global_data.Base,
    Sexplib0_Sexp_conv = global_data.Sexplib0__Sexp_conv,
    Ojs = global_data.Ojs,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib_Runtime = global_data.Ppx_inline_test_lib__Runtime;
   caml_call1(Ppx_module_timer_runtime[4], cst_Virtual_dom_Raw$0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_virtual_dom$0);
   caml_call1(Expect_test_collector[5][1], "src/raw.ml");
   caml_call2(Ppx_inline_test_lib_Runtime[2], cst_virtual_dom$0, cst);
   var
    _a_ = [0, "<opaque>"],
    _b_ = [0, "id_sexp"],
    cst_BUG_element_state_not_foun = "BUG: element state not found",
    cst_attributes = cst_attributes$0,
    cst_virtual_dom = cst_virtual_dom$0,
    cst_Virtual_dom_Raw = cst_Virtual_dom_Raw$0;
   function t_of_js(x){return x;}
   function t_to_js(x){return x;}
   var Native_node = [0, t_of_js, t_to_js];
   function t_of_js$0(x){return x;}
   function t_to_js$0(x){return x;}
   function create(param){return caml_call1(Ojs[11], 0);}
   var set_property = caml_js_set, has_property = Ojs[12];
   function has_attribute(t, name){
    var _y_ = caml_call2(Ojs[12], t, cst_attributes);
    if(! _y_) return _y_;
    var _z_ = t[cst_attributes$0];
    return caml_call2(Ojs[12], _z_, name);
   }
   function set_attribute(t, name, value){
    var _x_ = t[cst_attributes$0];
    if(caml_call2(Base[204], _x_, undefined))
     t[cst_attributes$0] = caml_call1(Ojs[11], 0);
    return t[cst_attributes$0][name] = value;
   }
   var
    Attrs =
      [0,
       t_of_js$0,
       t_to_js$0,
       create,
       has_property,
       has_attribute,
       set_property,
       set_attribute];
   function t_of_js$1(param){return function(_w_){return _w_;};}
   function t_to_js$1(param){return function(_v_){return _v_;};}
   var Element_array = [0, t_of_js$1, t_to_js$1];
   function t_of_js$2(x2){return x2;}
   function t_to_js$2(x1){return x1;}
   function node(x3, x4, x5, x7){
    var
     _r_ = caml_call2(Ojs[8], caml_js_from_string, x7),
     _s_ = caml_call2(Element_array[2], t_to_js$2, x5),
     _t_ = caml_call1(Attrs[2], x4),
     _u_ = caml_js_from_string(x3);
    return new Ojs[19][cst_VirtualDom]["VNode"](_u_, _t_, _s_, _r_);
   }
   function text(x9){
    var _q_ = caml_js_from_string(x9);
    return new Ojs[19][cst_VirtualDom]["VText"](_q_);
   }
   function svg(x10, x11, x12, x14){
    var
     _m_ = caml_call2(Ojs[8], caml_js_from_string, x14),
     _n_ = caml_call2(Element_array[2], t_to_js$2, x12),
     _o_ = caml_call1(Attrs[2], x11),
     _p_ = caml_js_from_string(x10);
    return new Ojs[19][cst_VirtualDom]["svg"](_p_, _o_, _n_, _m_);
   }
   function to_dom(x16){
    var _l_ = Ojs[19][cst_VirtualDom].createElement(x16);
    return caml_call1(Native_node[1], _l_);
   }
   var Node = [0, t_of_js$2, t_to_js$2, node, text, svg, to_dom];
   function t_of_js$3(x18){return x18;}
   function t_to_js$3(x17){return x17;}
   function create$0(x19, x20){
    var _j_ = caml_call1(Node[2], x20), _k_ = caml_call1(Node[2], x19);
    return Ojs[19][cst_VirtualDom].diff(_k_, _j_);
   }
   function apply(x21, x22){
    var
     _h_ = caml_call1(Native_node[2], x21),
     _i_ = Ojs[19][cst_VirtualDom].patch(_h_, x22);
    return caml_call1(Native_node[1], _i_);
   }
   function f(patch){
    for(var key in patch) if(key !== "a") return false;
    return true;
   }
   function is_empty(t){return f(t) | 0;}
   var
    Patch = [0, t_of_js$3, t_to_js$3, create$0, apply, is_empty],
    t = caml_call1(Virtual_dom_Js_map[1], 0);
   function set(id, element, state){
    return caml_call3(Virtual_dom_Js_map[2], t, element, [0, id, state]);
   }
   function get(id, element){
    var match = caml_call2(Virtual_dom_Js_map[3], t, element);
    if(match){
     var match$0 = match[1], state = match$0[2], f_id = match$0[1];
     caml_call2(Base_Type_equal[12][11], id, f_id);
     return state;
    }
    function _e_(param){return _a_;}
    var
     id_sexp = caml_call2(Base_Type_equal[12][1], _e_, id),
     _f_ = [0, [1, [0, _b_, [0, caml_call1(Base[85][4], id_sexp), 0]]], 0],
     _g_ =
       [1,
        [0,
         caml_call1(Sexplib0_Sexp_conv[7], cst_BUG_element_state_not_foun),
         _f_]];
    return caml_call1(Base[203], _g_);
   }
   function delete$0(element){
    return caml_call2(Virtual_dom_Js_map[4], t, element);
   }
   var State_keeper = [0, t, set, get, delete$0];
   function create$1(info, opt, _c_, id){
    if(opt)
     var sth = opt[1], destroy = sth;
    else
     var destroy = function(param, _d_){return;};
    if(_c_)
     var sth$0 = _c_[1], update = sth$0;
    else
     var update = function(s, elt){return [0, s, elt];};
    return function(init, param){
     var obj = {};
     obj.type = "Widget";
     obj.name = 0;
     obj.id = id;
     obj.info = info;
     var
      t8 =
        caml_js_wrap_callback
         (function(param){
           var
            match = caml_call1(init, 0),
            dom_node = match[2],
            s0 = match[1];
           caml_call3(State_keeper[2], id, dom_node, s0);
           return dom_node;
          });
     obj.init = t8;
     var
      t11 =
        caml_js_wrap_callback
         (function(prev, dom_node){
           caml_call2(Base_Type_equal[12][11], prev.id, id);
           var
            prev_state = caml_call2(State_keeper[3], id, dom_node),
            match = caml_call2(update, prev_state, dom_node),
            dom_node$0 = match[2],
            state = match[1];
           caml_call1(State_keeper[4], dom_node);
           caml_call3(State_keeper[2], id, dom_node$0, state);
           return dom_node$0;
          });
     obj.update = t11;
     var
      t13 =
        caml_js_wrap_callback
         (function(dom_node){
           var prev_state = caml_call2(State_keeper[3], id, dom_node);
           caml_call2(destroy, prev_state, dom_node);
           return caml_call1(State_keeper[4], dom_node);
          });
     obj.destroy = t13;
     return caml_call1(Node[1], obj);};
   }
   var Widget = [0, State_keeper, create$1];
   caml_call1(Ppx_inline_test_lib_Runtime[3], cst_virtual_dom);
   caml_call1(Expect_test_collector[5][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Virtual_dom_Raw);
   var
    Virtual_dom_Raw =
      [0, Native_node, Attrs, Element_array, Node, Patch, Widget];
   runtime.caml_register_global(47, Virtual_dom_Raw, cst_Virtual_dom_Raw$0);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Virtual_dom__Attr
//# unitInfo: Requires: Core, Core__Bool, Core__Char, Core__Int, Core__List, Core__Map, Core__Option, Core__Set, Core__String, Core__Type_equal, Core__Unit, Css_gen, Expect_test_collector, Inline_test_config, Js_of_ocaml__Dom, Js_of_ocaml__Dom_html, Js_of_ocaml__Js, Ojs, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib__Runtime, Ppx_module_timer_runtime, Sexplib0__Sexp_conv, Ui_effect, Virtual_dom__Dom_float, Virtual_dom__Effect, Virtual_dom__Hooks, Virtual_dom__Raw
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst$7 = "",
    cst_Virtual_dom_Attr$0 = "Virtual_dom__Attr",
    cst$8 = "_",
    cst_class$1 = "class",
    cst_first = "first",
    cst_focus$0 = "focus",
    cst_input$1 = "input",
    cst_name$0 = "name",
    cst_on$1 = "on",
    cst_second = "second",
    cst_src_attr_ml$2 = "src/attr.ml",
    cst_style$1 = "style",
    cst_target$0 = "target",
    cst_value$2 = "value",
    cst_virtual_dom$0 = "virtual_dom",
    caml_js_from_string = runtime.caml_js_from_string,
    caml_jsstring_of_string = runtime.caml_jsstring_of_string;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call8(f, a0, a1, a2, a3, a4, a5, a6, a7){
    return (f.l >= 0 ? f.l : f.l = f.length) == 8
            ? f(a0, a1, a2, a3, a4, a5, a6, a7)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6, a7]);
   }
   var
    undef = undefined,
    global_data = runtime.caml_get_global_data(),
    cst$6 = cst$7,
    cst$0 = cst$7,
    cst = cst$7,
    empty = [6, 0],
    cst$1 = cst$7,
    cst$2 = cst$7,
    cst$3 = cst$7,
    cst$4 = cst$7,
    cst$5 = cst$7,
    Core_List = global_data.Core__List,
    Core = global_data.Core,
    Core_String = global_data.Core__String,
    Css_gen = global_data.Css_gen,
    Core_Set = global_data.Core__Set,
    Virtual_dom_Effect = global_data.Virtual_dom__Effect,
    Ui_effect = global_data.Ui_effect,
    Sexplib0_Sexp_conv = global_data.Sexplib0__Sexp_conv,
    Virtual_dom_Hooks = global_data.Virtual_dom__Hooks,
    Js_of_ocaml_Js = global_data.Js_of_ocaml__Js,
    Js_of_ocaml_Dom_html = global_data.Js_of_ocaml__Dom_html,
    Core_Option = global_data.Core__Option,
    Core_Type_equal = global_data.Core__Type_equal,
    Core_Bool = global_data.Core__Bool,
    Core_Int = global_data.Core__Int,
    Core_Char = global_data.Core__Char,
    Virtual_dom_Raw = global_data.Virtual_dom__Raw,
    Core_Map = global_data.Core__Map,
    Js_of_ocaml_Dom = global_data.Js_of_ocaml__Dom,
    Ojs = global_data.Ojs,
    Virtual_dom_Dom_float = global_data.Virtual_dom__Dom_float,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib_Runtime = global_data.Ppx_inline_test_lib__Runtime,
    Inline_test_config = global_data.Inline_test_config,
    Core_Unit = global_data.Core__Unit;
   caml_call1(Ppx_module_timer_runtime[4], cst_Virtual_dom_Attr$0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_virtual_dom$0);
   caml_call1(Expect_test_collector[5][1], cst_src_attr_ml$2);
   caml_call2(Ppx_inline_test_lib_Runtime[2], cst_virtual_dom$0, cst);
   Css_gen[94][1][1] = Virtual_dom_Dom_float[6];
   var
    cst_on$0 = cst_on$1,
    cst_style$0 = cst_style$1,
    cst_class$0 = cst_class$1,
    cst_single_focus_hook = "single-focus-hook",
    cst_always_focus_hook = "always-focus-hook",
    cst_input$0 = cst_input$1,
    _x_ = [1, 0],
    cst_draggable = "draggable",
    cst_rowspan = "rowspan",
    cst_colspan = "colspan",
    cst_max = "max",
    cst_min = "min",
    cst_src = "src",
    cst_title = "title",
    cst_tabindex = "tabindex",
    cst_value$1 = cst_value$2,
    cst_value$0 = cst_value$2,
    cst_type = "type",
    cst_for = "for",
    cst_autofocus = "autofocus",
    cst_placeholder = "placeholder",
    cst_target = cst_target$0,
    cst_href = "href",
    cst_name = cst_name$0,
    cst_id = "id",
    _w_ = [0, "classnames"],
    cst_invalid_classnames = "invalid classnames",
    _v_ = [0, "classname"],
    cst_invalid_classname = "invalid classname",
    cst_foo_bar$0 = "foo bar",
    cst_foo_bar = "foo-bar",
    _p_ = [0, cst_name$0],
    cst_WARNING_not_combining_prop = "WARNING: not combining properties",
    cst_value = cst_value$2,
    _q_ = [0, cst_name$0],
    cst_WARNING_not_combining_attr = "WARNING: not combining attributes",
    cst_on = cst_on$1,
    _o_ = [0, cst_name$0],
    cst_WARNING_not_combining_hook = "WARNING: not combining hooks",
    _n_ = [0, cst_name$0],
    cst_WARNING_not_combining_hand = "WARNING: not combining handlers",
    _l_ = [0, cst_second],
    _m_ = [0, cst_first],
    cst_WARNING_not_combining_clas = "WARNING: not combining classes",
    _j_ = [0, cst_second],
    _k_ = [0, cst_first],
    cst_WARNING_not_combining_styl = "WARNING: not combining styles",
    cst_style = cst_style$1,
    _r_ = [0, " "],
    cst_class = cst_class$1,
    _f_ = [0, "quota"],
    cst_WARNING_reached_warning_me =
      "WARNING: reached warning message quota; no more messages will be printed",
    _c_ = [0, cst$8],
    _a_ = [0, cst$8],
    _b_ = [0, "rtid"],
    _d_ = [0, "ltid"],
    cst_BUG_Type_ids_for_event_han =
      "BUG!  Type-ids for event handlers differ",
    _e_ = [0, 100],
    cst_src_attr_ml = cst_src_attr_ml$2,
    cst_valid = "valid",
    cst_src_attr_ml$0 = cst_src_attr_ml$2,
    cst_invalid_empty = "invalid-empty",
    cst_src_attr_ml$1 = cst_src_attr_ml$2,
    cst_invalid_space = "invalid-space",
    cst_checked = "checked",
    cst_selected = "selected",
    cst_hidden = "hidden",
    cst_readonly = "readonly",
    cst_disabled = "disabled",
    cst_event = "event",
    cst_focusEvent = "focusEvent",
    cst_mouseEvent = "mouseEvent",
    cst_keyboardEvent = "keyboardEvent",
    cst_submitEvent = "submitEvent",
    cst_mousewheelEvent = "mousewheelEvent",
    cst_clipboardEvent = "clipboardEvent",
    cst_dragEvent = "dragEvent",
    cst_pointerEvent = "pointerEvent",
    cst_animationEvent = "animationEvent",
    cst_focus = cst_focus$0,
    cst_blur = "blur",
    cst_click = "click",
    cst_contextmenu = "contextmenu",
    cst_dblclick = "dblclick",
    cst_drag = "drag",
    cst_dragstart = "dragstart",
    cst_dragend = "dragend",
    cst_dragenter = "dragenter",
    cst_dragleave = "dragleave",
    cst_dragover = "dragover",
    cst_drop = "drop",
    cst_mousemove = "mousemove",
    cst_mouseup = "mouseup",
    cst_mousedown = "mousedown",
    cst_mouseenter = "mouseenter",
    cst_mouseleave = "mouseleave",
    cst_mouseover = "mouseover",
    cst_mouseout = "mouseout",
    cst_keyup = "keyup",
    cst_keypress = "keypress",
    cst_keydown = "keydown",
    cst_scroll = "scroll",
    cst_submit = "submit",
    cst_pointerdown = "pointerdown",
    cst_pointerup = "pointerup",
    cst_mousewheel = "mousewheel",
    cst_copy = "copy",
    cst_cut = "cut",
    cst_paste = "paste",
    cst_reset = "reset",
    cst_animationend = "animationend",
    cst_change = "change",
    cst_input = cst_input$1,
    cst_virtual_dom = cst_virtual_dom$0,
    cst_Virtual_dom_Attr = cst_Virtual_dom_Attr$0;
   function combine(param, right){
    var
     rhandler = right[2],
     x_002 = right[1],
     lhandler = param[2],
     x_001 = param[1];
    if(caml_call2(Core_Type_equal[8][9], x_001, x_002))
     return [0,
             x_001,
             function(value){
              function _bW_(param){return caml_call1(rhandler, value);}
              var _bX_ = caml_call1(lhandler, value);
              return caml_call2(Virtual_dom_Effect[20], _bX_, _bW_);
             }];
    var _bO_ = 0, _bP_ = 0;
    function _bQ_(param){return _a_;}
    var
     _bR_ =
       [0,
        [1,
         [0, _b_, [0, caml_call2(Core_Type_equal[8][1], _bQ_, x_002), _bP_]]],
        _bO_],
     _bS_ = 0;
    function _bT_(param){return _c_;}
    var
     _bU_ =
       [0,
        [1,
         [0, _d_, [0, caml_call2(Core_Type_equal[8][1], _bT_, x_001), _bS_]]],
        _bR_],
     _bV_ =
       [1,
        [0,
         caml_call1(Sexplib0_Sexp_conv[7], cst_BUG_Type_ids_for_event_han),
         _bU_]];
    caml_call2(Core[249], 0, _bV_);
    return right;
   }
   function create(name, value){
    return [1, 0, name, caml_jsstring_of_string(value)];
   }
   function create_float(name, value){
    return [1, 0, name, caml_call1(Virtual_dom_Dom_float[1], value)];
   }
   function property(name, value){return [0, 0, name, value];}
   function string_property(name, value){
    return [0, 0, name, caml_jsstring_of_string(value)];
   }
   function bool_property(name, value){return [0, 0, name, ! ! value];}
   function suppress_merge_warnings(t){
    switch(t[0]){
      case 0:
       return [0, 1, t[2], t[3]];
      case 1:
       return [1, 1, t[2], t[3]];
      default: return t;
    }
   }
   function create_hook(name, hook){return [3, name, hook];}
   function many(attrs){return [6, attrs];}
   function many_without_merge(attrs){return [8, attrs];}
   function combine$0(left, right){return [6, [0, left, [0, right, 0]]];}
   var warning_count = [0, 0], current = [0, _e_];
   function warn_s(s){
    warning_count[1]++;
    var match = current[1];
    if(typeof match === "number"){
     if(match) return caml_call2(Core[249], 0, s);
     return;
    }
    var quota = match[1], warning_count$0 = warning_count[1];
    if(caml_call2(Core[89], warning_count$0, quota)){
     caml_call2(Core[249], 0, s);
     if(caml_call2(Core[90], warning_count$0, quota)){
      var
       _bM_ = [0, [1, [0, _f_, [0, caml_call1(Core[356], quota), 0]]], 0],
       _bN_ =
         [1,
          [0,
           caml_call1(Sexplib0_Sexp_conv[7], cst_WARNING_reached_warning_me),
           _bM_]];
      return caml_call2(Core[249], 0, _bN_);
     }
    }
    return;
   }
   function reset_warning_count(param){warning_count[1] = 0; return 0;}
   var For_testing = [0, reset_warning_count];
   function combining_map_add(map, key, value, combine){
    function _bL_(param){
     if(! param) return value;
     var existing_value = param[1];
     return caml_call3(combine, key, existing_value, value);
    }
    return caml_call3(Core_Map[37], map, key, _bL_);
   }
   var
    _g_ = caml_call1(Core_Map[4], [0, Core_String[139]]),
    _h_ = caml_call1(Core_Map[4], [0, Core_String[139]]),
    _i_ = caml_call1(Core_Set[6], [0, Core_String[139]]),
    empty_merge = [0, Css_gen[20], _i_, _h_, _g_];
   function style(css){return [4, css];}
   function valid_class_name(s){
    var
     _bK_ = caml_call1(Core_String[5], s),
     invalid = _bK_ || caml_call2(Core_String[10], s, Core_Char[19]);
    return 1 - invalid;
   }
   function _s_(param){return valid_class_name(cst_foo_bar);}
   caml_call8
    (Ppx_inline_test_lib_Runtime[4],
     Inline_test_config,
     cst_valid,
     0,
     cst_src_attr_ml,
     382,
     0,
     45,
     _s_);
   function _t_(param){return 1 - valid_class_name(cst$0);}
   caml_call8
    (Ppx_inline_test_lib_Runtime[4],
     Inline_test_config,
     cst_invalid_empty,
     0,
     cst_src_attr_ml$0,
     383,
     0,
     52,
     _t_);
   function _u_(param){return 1 - valid_class_name(cst_foo_bar$0);}
   caml_call8
    (Ppx_inline_test_lib_Runtime[4],
     Inline_test_config,
     cst_invalid_space,
     0,
     cst_src_attr_ml$1,
     384,
     0,
     59,
     _u_);
   function class$0(classname){
    if(1 - valid_class_name(classname)){
     var
      _bI_ = [0, [1, [0, _v_, [0, caml_call1(Core[471], classname), 0]]], 0],
      _bJ_ =
        [1,
         [0, caml_call1(Sexplib0_Sexp_conv[7], cst_invalid_classname), _bI_]];
     caml_call1(Core[253], _bJ_);
    }
    return [5, caml_call2(Core_Set[7], [0, Core_String[139]], classname)];
   }
   function classes(classes){return [5, classes];}
   function classes$0(classnames){
    if(1 - caml_call2(Core_List[14], classnames, valid_class_name)){
     var
      _bG_ =
        [0,
         [1, [0, _w_, [0, caml_call2(Core[421], Core[471], classnames), 0]]],
         0],
      _bH_ =
        [1,
         [0, caml_call1(Sexplib0_Sexp_conv[7], cst_invalid_classnames), _bG_]];
     caml_call1(Core[253], _bH_);
    }
    return [5, caml_call2(Core_Set[33], [0, Core_String[139]], classnames)];
   }
   function id(s){return create(cst_id, s);}
   function name(s){return create(cst_name, s);}
   function href(r){return create(cst_href, r);}
   function target(s){return create(cst_target, s);}
   var
    checked = create(cst_checked, cst$1),
    selected = create(cst_selected, cst$2),
    hidden = create(cst_hidden, cst$3),
    readonly = create(cst_readonly, cst$4),
    disabled = create(cst_disabled, cst$5);
   function placeholder(x){return create(cst_placeholder, x);}
   function autofocus(param){
    return param ? create(cst_autofocus, cst$6) : empty;
   }
   function for$0(x){return create(cst_for, x);}
   function type(x){return create(cst_type, x);}
   function value(x){return create(cst_value$0, x);}
   function value_prop(x){return string_property(cst_value$1, x);}
   function tabindex(x){
    return create(cst_tabindex, caml_call1(Core_Int[82], x));
   }
   function title(x){return create(cst_title, x);}
   function src(x){return create(cst_src, x);}
   function min(x){return create_float(cst_min, x);}
   function max(x){return create_float(cst_max, x);}
   function colspan(x){
    return create(cst_colspan, caml_call1(Core_Int[82], x));
   }
   function rowspan(x){
    return create(cst_rowspan, caml_call1(Core_Int[82], x));
   }
   function draggable(b){
    return create(cst_draggable, caml_call1(Core_Bool[19], b));
   }
   function create$0(name){
    function _bF_(param){return _x_;}
    return caml_call2(Core_Type_equal[8][3], name, _bF_);
   }
   var
    event = create$0(cst_event),
    focus = create$0(cst_focusEvent),
    mouse = create$0(cst_mouseEvent),
    keyboard = create$0(cst_keyboardEvent),
    submit = create$0(cst_submitEvent),
    mousewheel = create$0(cst_mousewheelEvent),
    clipboard = create$0(cst_clipboardEvent),
    drag = create$0(cst_dragEvent),
    pointer = create$0(cst_pointerEvent),
    animation = create$0(cst_animationEvent);
   function on(type_id, name, handler){
    return [2, name, [0, type_id, handler]];
   }
   function on_focus(_bE_){return on(focus, cst_focus, _bE_);}
   function on_blur(_bD_){return on(focus, cst_blur, _bD_);}
   function on_click(_bC_){return on(mouse, cst_click, _bC_);}
   function on_contextmenu(_bB_){return on(mouse, cst_contextmenu, _bB_);}
   function on_double_click(_bA_){return on(mouse, cst_dblclick, _bA_);}
   function on_drag(_bz_){return on(drag, cst_drag, _bz_);}
   function on_dragstart(_by_){return on(drag, cst_dragstart, _by_);}
   function on_dragend(_bx_){return on(drag, cst_dragend, _bx_);}
   function on_dragenter(_bw_){return on(drag, cst_dragenter, _bw_);}
   function on_dragleave(_bv_){return on(drag, cst_dragleave, _bv_);}
   function on_dragover(_bu_){return on(drag, cst_dragover, _bu_);}
   function on_drop(_bt_){return on(drag, cst_drop, _bt_);}
   function on_mousemove(_bs_){return on(mouse, cst_mousemove, _bs_);}
   function on_mouseup(_br_){return on(mouse, cst_mouseup, _br_);}
   function on_mousedown(_bq_){return on(mouse, cst_mousedown, _bq_);}
   function on_mouseenter(_bp_){return on(mouse, cst_mouseenter, _bp_);}
   function on_mouseleave(_bo_){return on(mouse, cst_mouseleave, _bo_);}
   function on_mouseover(_bn_){return on(mouse, cst_mouseover, _bn_);}
   function on_mouseout(_bm_){return on(mouse, cst_mouseout, _bm_);}
   function on_keyup(_bl_){return on(keyboard, cst_keyup, _bl_);}
   function on_keypress(_bk_){return on(keyboard, cst_keypress, _bk_);}
   function on_keydown(_bj_){return on(keyboard, cst_keydown, _bj_);}
   function on_scroll(_bi_){return on(event, cst_scroll, _bi_);}
   function on_submit(_bh_){return on(submit, cst_submit, _bh_);}
   function on_pointerdown(_bg_){return on(pointer, cst_pointerdown, _bg_);}
   function on_pointerup(_bf_){return on(pointer, cst_pointerup, _bf_);}
   function on_mousewheel(_be_){return on(mousewheel, cst_mousewheel, _be_);}
   function on_copy(_bd_){return on(clipboard, cst_copy, _bd_);}
   function on_cut(_bc_){return on(clipboard, cst_cut, _bc_);}
   function on_paste(_bb_){return on(clipboard, cst_paste, _bb_);}
   function on_reset(_ba_){return on(event, cst_reset, _ba_);}
   function on_animationend(_a$_){
    return on(animation, cst_animationend, _a$_);
   }
   function const_ignore(param){return Virtual_dom_Effect[1];}
   function run_coercion(coercion, target, prev){
    if(prev) return prev;
    var _a__ = caml_call1(coercion, target);
    return caml_call1(Js_of_ocaml_Js[5][10], _a__);
   }
   function on_input_event(type_id, event, handler){
    return on
            (type_id,
             event,
             function(ev){
              function _a4_(target){
               function _a8_(target){
                var text = runtime.caml_string_of_jsstring(target.value);
                return caml_call2(handler, ev, text);
               }
               var
                _a9_ = Virtual_dom_Effect[1],
                _a5_ = run_coercion(Js_of_ocaml_Dom_html[117][33], target, 0),
                _a6_ =
                  run_coercion(Js_of_ocaml_Dom_html[117][50], target, _a5_),
                _a7_ =
                  run_coercion(Js_of_ocaml_Dom_html[117][55], target, _a6_);
               return caml_call3(Core_Option[36], _a7_, _a9_, _a8_);
              }
              return caml_call3
                      (Js_of_ocaml_Js[5][7], ev.target, const_ignore, _a4_);
             });
   }
   function on_change(_a3_){return on_input_event(event, cst_change, _a3_);}
   function on_input(_a2_){return on_input_event(event, cst_input, _a2_);}
   function to_raw(attr){
    switch(attr[0]){
      case 6:
      case 8:
       if(! attr[1]) return caml_call1(Virtual_dom_Raw[2][3], 0); break;
    }
    var
     attrs = [0, attr, 0],
     attrs_obj = caml_call1(Virtual_dom_Raw[2][3], 0);
    function take_second_styles(first, second){
     if(1 - caml_call1(Css_gen[21], first)){
      var
       _a0_ = [0, [1, [0, _j_, [0, caml_call1(Css_gen[9], second), 0]]], 0],
       _a1_ = [0, [1, [0, _k_, [0, caml_call1(Css_gen[9], first), 0]]], _a0_];
      warn_s
       ([1,
         [0,
          caml_call1(Sexplib0_Sexp_conv[7], cst_WARNING_not_combining_styl),
          _a1_]]);
     }
     return second;
    }
    function take_second_classes(first, second){
     if(1 - caml_call1(Core_Set[9], first)){
      var
       _aY_ =
         [0,
          [1, [0, _l_, [0, caml_call1(Core_String[141][75], second), 0]]],
          0],
       _aZ_ =
         [0,
          [1, [0, _m_, [0, caml_call1(Core_String[141][75], first), 0]]],
          _aY_];
      warn_s
       ([1,
         [0,
          caml_call1(Sexplib0_Sexp_conv[7], cst_WARNING_not_combining_clas),
          _aZ_]]);
     }
     return second;
    }
    function take_second_handler(name, first, second){
     var _aX_ = [0, [1, [0, _n_, [0, caml_call1(Core[471], name), 0]]], 0];
     warn_s
      ([1,
        [0,
         caml_call1(Sexplib0_Sexp_conv[7], cst_WARNING_not_combining_hand),
         _aX_]]);
     return second;
    }
    function take_second_hook(name, first, second){
     var _aW_ = [0, [1, [0, _o_, [0, caml_call1(Core[471], name), 0]]], 0];
     warn_s
      ([1,
        [0,
         caml_call1(Sexplib0_Sexp_conv[7], cst_WARNING_not_combining_hook),
         _aW_]]);
     return second;
    }
    function merge
    (combine_hook, combine_handler, combine_styles, combine_classes, acc){
     var _as_ = Core_List[10];
     function _at_(acc, attr){
      switch(attr[0]){
        case 0:
         var
          value = attr[3],
          name = attr[2],
          suppress_merge_warnings = attr[1],
          _av_ = caml_call2(Virtual_dom_Raw[2][4], attrs_obj, name),
          _aw_ = _av_ ? 1 - suppress_merge_warnings : _av_;
         if(_aw_){
          var
           _ax_ = [0, [1, [0, _p_, [0, caml_call1(Core[471], name), 0]]], 0];
          warn_s
           ([1,
             [0,
              caml_call1
               (Sexplib0_Sexp_conv[7], cst_WARNING_not_combining_prop),
              _ax_]]);
         }
         if(runtime.caml_string_notequal(name, cst_value$2))
          caml_call3(Virtual_dom_Raw[2][6], attrs_obj, name, value);
         else{
          var value$0 = Js_of_ocaml_Js[52][1].SoftSetHook(value);
          caml_call3(Virtual_dom_Raw[2][6], attrs_obj, cst_value, value$0);
         }
         return acc;
        case 1:
         var
          value$1 = attr[3],
          name$0 = attr[2],
          suppress_merge_warnings$0 = attr[1],
          _ay_ = caml_call2(Virtual_dom_Raw[2][5], attrs_obj, name$0),
          _az_ = _ay_ ? 1 - suppress_merge_warnings$0 : _ay_;
         if(_az_){
          var
           _aA_ = [0, [1, [0, _q_, [0, caml_call1(Core[471], name$0), 0]]], 0];
          warn_s
           ([1,
             [0,
              caml_call1
               (Sexplib0_Sexp_conv[7], cst_WARNING_not_combining_attr),
              _aA_]]);
         }
         caml_call3(Virtual_dom_Raw[2][7], attrs_obj, name$0, value$1);
         return acc;
        case 2:
         var
          handler = attr[2],
          name$1 = attr[1],
          _aB_ = acc[4],
          _aC_ = combining_map_add(acc[3], name$1, handler, combine_handler);
         return [0, acc[1], acc[2], _aC_, _aB_];
        case 3:
         var
          hook = attr[2],
          name$2 = attr[1],
          _aD_ = combining_map_add(acc[4], name$2, hook, combine_hook);
         return [0, acc[1], acc[2], acc[3], _aD_];
        case 4:
         var
          new_styles = attr[1],
          _aE_ = acc[4],
          _aF_ = acc[3],
          _aG_ = acc[2];
         return [0,
                 caml_call2(combine_styles, acc[1], new_styles),
                 _aG_,
                 _aF_,
                 _aE_];
        case 5:
         var
          new_classes = attr[1],
          _aH_ = acc[4],
          _aI_ = acc[3],
          _aJ_ = caml_call2(combine_classes, acc[2], new_classes);
         return [0, acc[1], _aJ_, _aI_, _aH_];
        case 6:
         var
          attrs = attr[1],
          _aK_ = Core_Set[13],
          _aL_ = Css_gen[27],
          _aM_ = function(param){return combine;},
          sub_merge =
            merge
              (function(param){return Virtual_dom_Hooks[1];},
               _aM_,
               _aL_,
               _aK_,
               empty_merge)
             (attrs),
          _aN_ = caml_call3(Core_Map[78], acc[4], sub_merge[4], combine_hook),
          _aO_ =
            caml_call3(Core_Map[78], acc[3], sub_merge[3], combine_handler),
          _aP_ = caml_call2(combine_classes, acc[2], sub_merge[2]);
         return [0,
                 caml_call2(combine_styles, acc[1], sub_merge[1]),
                 _aP_,
                 _aO_,
                 _aN_];
        case 7:
         var
          map_classes = attr[3],
          map_styles = attr[2],
          attrs$0 = attr[1],
          sub_merge$0 =
            merge
              (take_second_hook,
               take_second_handler,
               Css_gen[27],
               Core_Set[13],
               empty_merge)
             (attrs$0),
          _aQ_ =
            caml_call3(Core_Map[78], acc[4], sub_merge$0[4], combine_hook),
          _aR_ =
            caml_call3(Core_Map[78], acc[3], sub_merge$0[3], combine_handler),
          _aS_ =
            caml_call1
             (map_classes,
              caml_call2(combine_classes, acc[2], sub_merge$0[2]));
         return [0,
                 caml_call1
                  (map_styles,
                   caml_call2(combine_styles, acc[1], sub_merge$0[1])),
                 _aS_,
                 _aR_,
                 _aQ_];
        default:
         var
          attrs$1 = attr[1],
          sub_merge$1 =
            merge
              (take_second_hook,
               take_second_handler,
               take_second_styles,
               take_second_classes,
               empty_merge)
             (attrs$1),
          _aT_ =
            caml_call3(Core_Map[78], acc[4], sub_merge$1[4], combine_hook),
          _aU_ =
            caml_call3(Core_Map[78], acc[3], sub_merge$1[3], combine_handler),
          _aV_ = caml_call2(combine_classes, acc[2], sub_merge$1[2]);
         return [0,
                 caml_call2(combine_styles, acc[1], sub_merge$1[1]),
                 _aV_,
                 _aU_,
                 _aT_];
      }
     }
     return function(_au_){return caml_call3(_as_, _au_, acc, _at_);};
    }
    var
     merge$0 =
       merge
         (take_second_hook,
          take_second_handler,
          take_second_styles,
          take_second_classes,
          empty_merge)
        (attrs);
    function _aj_(name, hook){
     var _ar_ = caml_call1(Virtual_dom_Hooks[2], hook);
     return caml_call3(Virtual_dom_Raw[2][6], attrs_obj, name, _ar_);
    }
    caml_call2(Core_Map[45], merge$0[4], _aj_);
    function _ak_(name, param){
     var handler = param[2];
     function f(e){
      var _aq_ = caml_call1(handler, e);
      caml_call2(Virtual_dom_Effect[22][1], e, _aq_);
      return Js_of_ocaml_Js[7];
     }
     var
      _ao_ = caml_call1(Js_of_ocaml_Dom[10], f),
      _ap_ = caml_call2(Core[18], cst_on, name);
     return caml_call3(Virtual_dom_Raw[2][6], attrs_obj, _ap_, _ao_);
    }
    caml_call2(Core_Map[45], merge$0[3], _ak_);
    if(1 - caml_call1(Css_gen[21], merge$0[1])){
     var
      props = caml_call1(Css_gen[30], merge$0[1]),
      obj = caml_call1(Ojs[11], 0),
      _al_ =
        function(param){
         var v = param[2], k = param[1];
         return obj[k] = caml_js_from_string(v);
        };
     caml_call2(Core_List[9], props, _al_);
     caml_call3(Virtual_dom_Raw[2][6], attrs_obj, cst_style, obj);
    }
    if(! caml_call1(Core_Set[9], merge$0[2])){
     var
      _am_ = caml_call1(Core_Set[38], merge$0[2]),
      _an_ = caml_js_from_string(caml_call2(Core_String[32], _r_, _am_));
     caml_call3(Virtual_dom_Raw[2][7], attrs_obj, cst_class, _an_);
    }
    return attrs_obj;
   }
   function on_file_input(handler){
    return on
            (event,
             cst_input$0,
             function(ev){
              function _af_(target){
               function _ag_(target){
                function _ai_(files){return caml_call2(handler, ev, files);}
                return caml_call3
                        (Js_of_ocaml_Js[6][7], target.files, const_ignore, _ai_);
               }
               var _ah_ = caml_call1(Js_of_ocaml_Dom_html[117][33], target);
               return caml_call3
                       (Js_of_ocaml_Js[5][7], _ah_, const_ignore, _ag_);
              }
              return caml_call3
                      (Js_of_ocaml_Js[5][7], ev.target, const_ignore, _af_);
             });
   }
   var sexp_of_t = Core_Unit[15];
   function combine$1(param, _ae_){return 0;}
   function init(param, _ad_){return 0;}
   function on_mount(param, _ac_, element){return element.focus();}
   function update(param, _ab_, _aa_, _$_){return 0;}
   function destroy(param, ___, _Z_){return 0;}
   var
    Hook =
      caml_call1
       (Virtual_dom_Hooks[3],
        [0, [0], [0, sexp_of_t, combine$1], init, on_mount, update, destroy]);
   function attr(param){
    return [3, cst_always_focus_hook, caml_call1(Hook[1], 0)];
   }
   function map_style(t, f){
    var _X_ = 0;
    return [0, [7, t, f, function(_Y_){return _Y_;}], _X_];
   }
   function add_class(t, c){
    var _U_ = 0;
    function _V_(cs){return caml_call2(Core_Set[11], cs, c);}
    return [0, [7, t, function(_W_){return _W_;}, _V_], _U_];
   }
   function add_style(t, s){
    return map_style(t, function(ss){return caml_call2(Css_gen[27], ss, s);});
   }
   function merge_classes_and_styles(t){
    var _Q_ = 0;
    function _R_(_T_){return _T_;}
    return [0, [7, t, function(_S_){return _S_;}, _R_], _Q_];
   }
   function filter_by_kind(t, f){
    switch(t[0]){
      case 0:
       return caml_call1(f, 99222645) ? t : empty;
      case 1:
       return caml_call1(f, 482562044) ? t : empty;
      case 2:
       return caml_call1(f, 321312682) ? t : empty;
      case 3:
       return caml_call1(f, 803993603) ? t : empty;
      case 4:
       return caml_call1(f, 390796561) ? t : empty;
      case 5:
       return caml_call1(f, -611981288) ? t : empty;
      case 6:
       var attrs = t[1], _K_ = function(_P_){return filter_by_kind(_P_, f);};
       return [6, caml_call2(Core_List[72], attrs, _K_)];
      case 7:
       var
        b = t[3],
        a = t[2],
        attrs$0 = t[1],
        _L_ = function(_O_){return filter_by_kind(_O_, f);};
       return [7, caml_call2(Core_List[72], attrs$0, _L_), a, b];
      default:
       var
        attrs$1 = t[1],
        _M_ = function(_N_){return filter_by_kind(_N_, f);};
       return [8, caml_call2(Core_List[72], attrs$1, _M_)];
    }
   }
   function contains_name(looking_for, param){
    switch(param[0]){
      case 2:
       var name$0 = param[1], _H_ = caml_call2(Core[18], cst_on$0, name$0);
       return caml_call2(Core_String[126], _H_, looking_for);
      case 3:
       var name = param[1]; break;
      case 4:
       return caml_call2(Core_String[126], looking_for, cst_style$0);
      case 5:
       return caml_call2(Core_String[126], looking_for, cst_class$0);
      case 0:
      case 1:
       var name = param[2]; break;
      default:
       var
        attrs = param[1],
        _I_ = function(_J_){return contains_name(looking_for, _J_);};
       return caml_call2(Core_List[13], attrs, _I_);
    }
    return caml_call2(Core_String[126], looking_for, name);
   }
   caml_call1(Ppx_inline_test_lib_Runtime[3], cst_virtual_dom);
   caml_call1(Expect_test_collector[5][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Virtual_dom_Attr);
   var
    _y_ = [0, contains_name, filter_by_kind],
    Virtual_dom_Attr =
      [0,
       create,
       create_float,
       string_property,
       bool_property,
       property,
       suppress_merge_warnings,
       create_hook,
       many,
       many_without_merge,
       empty,
       combine$0,
       combine$0,
       autofocus,
       checked,
       class$0,
       classes$0,
       classes,
       disabled,
       for$0,
       href,
       target,
       id,
       name,
       placeholder,
       selected,
       hidden,
       readonly,
       style,
       min,
       max,
       colspan,
       rowspan,
       draggable,
       tabindex,
       type,
       value,
       value_prop,
       title,
       src,
       on_focus,
       on_blur,
       [0, current, For_testing],
       to_raw,
       on_input,
       on_change,
       on_file_input,
       on_click,
       on_contextmenu,
       on_double_click,
       on_drag,
       on_dragstart,
       on_dragend,
       on_dragenter,
       on_dragleave,
       on_dragover,
       on_drop,
       on_mousemove,
       on_mouseup,
       on_mousedown,
       on_mouseenter,
       on_mouseleave,
       on_mouseover,
       on_mouseout,
       on_keyup,
       on_keypress,
       on_keydown,
       on_scroll,
       on_submit,
       on_pointerdown,
       on_pointerup,
       on_mousewheel,
       on_copy,
       on_cut,
       on_paste,
       on_reset,
       on_animationend,
       [0, merge_classes_and_styles, map_style, add_style, add_class],
       [0, attr],
       function(_z_){
        var has_been_used = [0, 0], sexp_of_t = Sexplib0_Sexp_conv[23];
        function combine(left, right){
         return [0, Ui_effect[2], [0, left, [0, right, 0]]];
        }
        var Input = [0, sexp_of_t, combine];
        function init(param, _G_){return 0;}
        function on_mount(event, param, element){
         var _F_ = 1 - has_been_used[1];
         return _F_
                 ? (has_been_used
                    [1]
                   = 1,
                   element.focus(),
                   caml_call1(Virtual_dom_Effect[22][2], event))
                 : _F_;
        }
        function update(param, _E_, _D_, _C_){return 0;}
        function destroy(param, _B_, _A_){return 0;}
        var
         Hook =
           caml_call1
            (Virtual_dom_Hooks[3],
             [0, [0], Input, init, on_mount, update, destroy]);
        function attr(param, after){
         return [3, cst_single_focus_hook, caml_call1(Hook[1], after)];
        }
        return [0, attr];
       },
       _y_];
   runtime.caml_register_global(163, Virtual_dom_Attr, cst_Virtual_dom_Attr$0);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Virtual_dom__Global_listeners
//# unitInfo: Requires: Expect_test_collector, Js_of_ocaml__Dom, Js_of_ocaml__Dom_html, Js_of_ocaml__Js, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib__Runtime, Ppx_module_timer_runtime, Sexplib0__Sexp_conv, Ui_effect, Virtual_dom__Attr, Virtual_dom__Effect, Virtual_dom__Hooks
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Virtual_dom_Global_listene$0 = "Virtual_dom__Global_listeners",
    cst_virtual_dom$0 = "virtual_dom";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst = "",
    Virtual_dom_Attr = global_data.Virtual_dom__Attr,
    Js_of_ocaml_Dom_html = global_data.Js_of_ocaml__Dom_html,
    Virtual_dom_Effect = global_data.Virtual_dom__Effect,
    Js_of_ocaml_Js = global_data.Js_of_ocaml__Js,
    Js_of_ocaml_Dom = global_data.Js_of_ocaml__Dom,
    Sexplib0_Sexp_conv = global_data.Sexplib0__Sexp_conv,
    Ui_effect = global_data.Ui_effect,
    Virtual_dom_Hooks = global_data.Virtual_dom__Hooks,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib_Runtime = global_data.Ppx_inline_test_lib__Runtime;
   caml_call1(Ppx_module_timer_runtime[4], cst_Virtual_dom_Global_listene$0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_virtual_dom$0);
   caml_call1(Expect_test_collector[5][1], "src/global_listeners.ml");
   caml_call2(Ppx_inline_test_lib_Runtime[2], cst_virtual_dom$0, cst);
   var
    cst_global_mousemove_listener = "global-mousemove-listener",
    cst_global_mouseup_listener = "global-mouseup-listener",
    cst_virtual_dom = cst_virtual_dom$0,
    cst_Virtual_dom_Global_listene = cst_Virtual_dom_Global_listene$0;
   function Make(X){
    function sexp_of_t(param){
     function _g_(_h_){return 0;}
     return caml_call1(Sexplib0_Sexp_conv[24], _g_);
    }
    function combine(f, g, event){
     var
      _e_ = [0, caml_call1(g, event), 0],
      _f_ = [0, caml_call1(f, event), _e_];
     return [0, Ui_effect[2], _f_];
    }
    var Input = [0, sexp_of_t, combine];
    function init(f, element){
     function _c_(ev){
      var _d_ = caml_call1(f, ev);
      caml_call1(Virtual_dom_Effect[22][2], _d_);
      return Js_of_ocaml_Js[7];
     }
     var handler = caml_call1(Js_of_ocaml_Dom[10], _c_);
     return [0,
             caml_call4
              (Js_of_ocaml_Dom_html[17],
               Js_of_ocaml_Dom_html[8],
               X[1],
               handler,
               Js_of_ocaml_Js[7])];
    }
    function destroy(input, state, element){
     return caml_call1(Js_of_ocaml_Dom_html[18], state[1]);
    }
    function update(old_input, f, state, element){
     destroy(old_input, state, element);
     var new_state = init(f, element);
     state[1] = new_state[1];
     return 0;
    }
    function on_mount(input, state, element){return 0;}
    var
     include =
       caml_call1
        (Virtual_dom_Hooks[3],
         [0, [0], Input, init, on_mount, update, destroy]),
     create = include[1],
     For_testing = include[2];
    return [0, create, For_testing];
   }
   var
    event_kind = Js_of_ocaml_Dom_html[15][7],
    Mouse_up = Make([0, event_kind]),
    event_kind$0 = Js_of_ocaml_Dom_html[15][9],
    Mouse_move = Make([0, event_kind$0]);
   function mouseup(f){
    var _b_ = caml_call1(Mouse_up[1], f);
    return caml_call2(Virtual_dom_Attr[7], cst_global_mouseup_listener, _b_);
   }
   function mousemove(f){
    var _a_ = caml_call1(Mouse_move[1], f);
    return caml_call2(Virtual_dom_Attr[7], cst_global_mousemove_listener, _a_);
   }
   var
    mouse_up_type_id = Mouse_up[2][1],
    mouse_move_type_id = Mouse_move[2][1],
    For_testing = [0, mouse_up_type_id, mouse_move_type_id];
   caml_call1(Ppx_inline_test_lib_Runtime[3], cst_virtual_dom);
   caml_call1(Expect_test_collector[5][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Virtual_dom_Global_listene);
   var Virtual_dom_Global_listeners = [0, mouseup, mousemove, For_testing];
   runtime.caml_register_global
    (22, Virtual_dom_Global_listeners, cst_Virtual_dom_Global_listene$0);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Virtual_dom__Node
//# unitInfo: Requires: Base, Base__List, Base__Printf, Base__Staged, Base__Type_equal, CamlinternalLazy, Expect_test_collector, Js_of_ocaml__Js, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib__Runtime, Ppx_module_timer_runtime, Virtual_dom__Attr, Virtual_dom__Raw
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst$1 = "",
    cst_Virtual_dom_Node$0 = "Virtual_dom__Node",
    cst_input$0 = "input",
    cst_virtual_dom$0 = "virtual_dom";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   function caml_call6(f, a0, a1, a2, a3, a4, a5){
    return (f.l >= 0 ? f.l : f.l = f.length) == 6
            ? f(a0, a1, a2, a3, a4, a5)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst$0 = cst$1,
    res1_009 = [0, "<opaque>"],
    cst = cst$1,
    Virtual_dom_Raw = global_data.Virtual_dom__Raw,
    Base = global_data.Base,
    Base_List = global_data.Base__List,
    Virtual_dom_Attr = global_data.Virtual_dom__Attr,
    Base_Type_equal = global_data.Base__Type_equal,
    Base_Staged = global_data.Base__Staged,
    Base_Printf = global_data.Base__Printf,
    Js_of_ocaml_Js = global_data.Js_of_ocaml__Js,
    CamlinternalLazy = global_data.CamlinternalLazy,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib_Runtime = global_data.Ppx_inline_test_lib__Runtime;
   caml_call1(Ppx_module_timer_runtime[4], cst_Virtual_dom_Node$0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_virtual_dom$0);
   caml_call1(Expect_test_collector[5][1], "src/node.ml");
   caml_call2(Ppx_inline_test_lib_Runtime[2], cst_virtual_dom$0, cst);
   var
    include = Virtual_dom_Raw[6],
    create = include[2],
    Aliases = [0],
    _c_ = [0, "inner-html"],
    cst_inner_html_node = "inner-html-node",
    cst_Vdom_Node_inner_html_was_g = "Vdom.Node.inner_html was given a 'none'",
    cst_Vdom_Node_inner_html_was_g$0 =
      "Vdom.Node.inner_html was given a 'text'",
    cst_Vdom_Node_inner_html_was_g$1 =
      "Vdom.Node.inner_html was given a 'widget'",
    _a_ = [0, "state"],
    _b_ = [0, cst_input$0],
    cst_a = "a",
    cst_body = "body",
    cst_button = "button",
    cst_code = "code",
    cst_div = "div",
    cst_main = "main",
    cst_fieldset = "fieldset",
    cst_footer = "footer",
    cst_h1 = "h1",
    cst_h2 = "h2",
    cst_h3 = "h3",
    cst_h4 = "h4",
    cst_h5 = "h5",
    cst_h6 = "h6",
    cst_header = "header",
    cst_html = "html",
    cst_input = cst_input$0,
    cst_textarea = "textarea",
    cst_select = "select",
    cst_option = "option",
    cst_label = "label",
    cst_li = "li",
    cst_p = "p",
    cst_pre = "pre",
    cst_section = "section",
    cst_span = "span",
    cst_strong = "strong",
    cst_table = "table",
    cst_tbody = "tbody",
    cst_td = "td",
    cst_th = "th",
    cst_thead = "thead",
    cst_tr = "tr",
    cst_ul = "ul",
    cst_ol = "ol",
    cst_br = "br",
    cst_hr = "hr",
    cst_virtual_dom = cst_virtual_dom$0,
    cst_Virtual_dom_Node = cst_Virtual_dom_Node$0;
   function tag(t){return t[1];}
   function attrs(t){return t[3];}
   function key(t){return t[2];}
   function with_key(t, key){
    return [0, t[1], [0, key], t[3], t[4], t[5], t[6]];
   }
   function map_attrs(t, f){
    var
     attrs = caml_call1(f, t[3]),
     raw_attrs =
       [246, function(_bJ_){return caml_call1(Virtual_dom_Attr[43], attrs);}];
    return [0, t[1], t[2], attrs, raw_attrs, t[5], t[6]];
   }
   function add_class(t, c){
    return map_attrs
            (t,
             function(a){
              var _bI_ = caml_call1(Virtual_dom_Attr[15], c);
              return caml_call2(Virtual_dom_Attr[11], a, _bI_);
             });
   }
   function add_classes(t, c){
    return map_attrs
            (t,
             function(a){
              var _bH_ = caml_call1(Virtual_dom_Attr[16], c);
              return caml_call2(Virtual_dom_Attr[11], a, _bH_);
             });
   }
   function add_style(t, s){
    return map_attrs
            (t,
             function(a){
              var _bG_ = caml_call1(Virtual_dom_Attr[28], s);
              return caml_call2(Virtual_dom_Attr[11], a, _bG_);
             });
   }
   function t_to_js(param){
    if(typeof param === "number")
     return caml_call1(Virtual_dom_Raw[4][4], cst$0);
    switch(param[0]){
      case 0:
       var s = param[1]; return caml_call1(Virtual_dom_Raw[4][4], s);
      case 1:
       var
        _bD_ = param[1],
        _bE_ = _bD_[4],
        key = _bD_[2],
        tag = _bD_[1],
        _bF_ = runtime.caml_obj_tag(_bE_);
       a:
       if(250 === _bF_)
        var raw_attrs = _bE_[1];
       else{
        if(246 !== _bF_ && 244 !== _bF_){var raw_attrs = _bE_; break a;}
        var raw_attrs = caml_call1(CamlinternalLazy[2], _bE_);
       }
       var children = _bD_[5];
       return 4153924 <= _bD_[6]
               ? caml_call4
                 (Virtual_dom_Raw[4][5], tag, raw_attrs, children, key)
               : caml_call4
                 (Virtual_dom_Raw[4][3], tag, raw_attrs, children, key);
      default: var w = param[1]; return w;
    }
   }
   function element(kind, tag, key, attrs, children){
    var children_raw = new Js_of_ocaml_Js[18];
    function _bB_(other){
     return typeof other === "number"
             ? 0
             : (children_raw.push(t_to_js(other)), 0);
    }
    caml_call2(Base_List[9], children, _bB_);
    var
     raw_attrs =
       [246, function(_bC_){return caml_call1(Virtual_dom_Attr[43], attrs);}];
    return [0, tag, key, attrs, raw_attrs, children_raw, kind];
   }
   function element_expert(kind, tag, key, attrs, children){
    var
     raw_attrs =
       [246, function(_bA_){return caml_call1(Virtual_dom_Attr[43], attrs);}];
    return [0, tag, key, attrs, raw_attrs, children, kind];
   }
   function text(s){return [0, s];}
   function widget(info, destroy, update, id, init, param){
    return [2, caml_call6(create, info, destroy, update, id, init, 0)];
   }
   function create$0(tag, key, opt, children){
    if(opt)
     var sth = opt[1], attr = sth;
    else
     var attr = Virtual_dom_Attr[10];
    return [1, element(-847254184, tag, key, attr, children)];
   }
   function create_childless(tag, key, attr, param){return create$0(tag, key, attr, 0);
   }
   function create_svg(tag, key, opt, children){
    if(opt)
     var sth = opt[1], attr = sth;
    else
     var attr = Virtual_dom_Attr[10];
    return [1, element(4153924, tag, key, attr, children)];
   }
   var none = 0;
   function textf(format){return caml_call2(Base_Printf[4], text, format);}
   function widget_of_module(m){
    function _bs_(param){
     var
      arg0_006 = param[1],
      state_004 = arg0_006[2],
      input_002 = arg0_006[1],
      arg_005 = caml_call1(m[2][1], state_004),
      bnds_001 = [0, [1, [0, _a_, [0, arg_005, 0]]], 0],
      arg_003 = caml_call1(m[1][1], input_002),
      bnds_001$0 = [0, [1, [0, _b_, [0, arg_003, 0]]], bnds_001],
      res0_008 = [1, bnds_001$0];
     return [1, [0, res0_008, [0, res1_009, 0]]];
    }
    var id = caml_call2(Base_Type_equal[12][4], m[3], _bs_);
    function _bt_(input){
     var
      info = [246, function(_bz_){return caml_call1(m[1][1], input);}],
      _bw_ = 0;
     function _bx_(param){
      var
       match = caml_call1(m[4], input),
       element = match[2],
       state = match[1];
      return [0, [0, input, state], element];
     }
     var
      _by_ =
        [0,
         function(param, element){
          var
           state = param[2],
           prev_input = param[1],
           match = caml_call4(m[5], prev_input, input, state, element),
           element$0 = match[2],
           state$0 = match[1];
          return [0, [0, input, state$0], element$0];
         }];
     return caml_call6
             (create,
              [0, info],
              [0,
               function(param, element){
                var state = param[2], prev_input = param[1];
                return caml_call3(m[6], prev_input, state, element);
               }],
              _by_,
              id,
              _bx_,
              _bw_);
    }
    var
     _bu_ = caml_call1(Base_Staged[1], _bt_),
     f = caml_call1(Base_Staged[2], _bu_);
    function _bv_(i){return [2, caml_call1(f, i)];}
    return caml_call1(Base_Staged[1], _bv_);
   }
   function to_dom(t){
    var _br_ = t_to_js(t);
    return caml_call1(Virtual_dom_Raw[4][6], _br_);
   }
   function inner_html(create, tag, attr, content){
    var element = caml_call3(create, tag, attr, 0);
    function build_sexp(extra, content){
     return [1, [0, _c_, [0, extra, [0, [0, content], 0]]]];
    }
    function _bl_(param){
     var match = param[1], content = match[2], element = match[1];
     return build_sexp(element, content);
    }
    var id = caml_call2(Base_Type_equal[12][4], cst_inner_html_node, _bl_);
    if(typeof element === "number")
     var debug = caml_call1(Base[201], cst_Vdom_Node_inner_html_was_g);
    else
     switch(element[0]){
       case 0:
        var debug = caml_call1(Base[201], cst_Vdom_Node_inner_html_was_g$0);
        break;
       case 1:
        var element$0 = element[1], debug = [0, element$0[1]]; break;
       default:
        var debug = caml_call1(Base[201], cst_Vdom_Node_inner_html_was_g$1);
     }
    var _bm_ = 0;
    function _bn_(param){
     var
      element$0 = to_dom(element),
      t3 = runtime.caml_jsstring_of_string(content);
     element$0.innerHTML = t3;
     return [0, [0, debug, content], element$0];
    }
    var _bo_ = 0, _bp_ = 0;
    return widget
            ([0, [246, function(_bq_){return build_sexp(debug, content);}]],
             _bp_,
             _bo_,
             id,
             _bn_,
             _bm_);
   }
   function _d_(tag, attr){
    var key = 0;
    return function(children){
     return [1, element(4153924, tag, key, attr, children)];};
   }
   function inner_html_svg(_bi_, _bj_, _bk_){
    return inner_html(_d_, _bi_, _bj_, _bk_);
   }
   function _e_(tag, attr){
    var _bf_ = [0, attr], _bg_ = 0;
    return function(_bh_){return create$0(tag, _bg_, _bf_, _bh_);};
   }
   function inner_html$0(_bc_, _bd_, _be_){
    return inner_html(_e_, _bc_, _bd_, _be_);
   }
   function a(_a$_, _ba_, _bb_){return create$0(cst_a, _a$_, _ba_, _bb_);}
   function body(_a8_, _a9_, _a__){
    return create$0(cst_body, _a8_, _a9_, _a__);
   }
   function button(_a5_, _a6_, _a7_){
    return create$0(cst_button, _a5_, _a6_, _a7_);
   }
   function code(_a2_, _a3_, _a4_){
    return create$0(cst_code, _a2_, _a3_, _a4_);
   }
   function div(_aZ_, _a0_, _a1_){return create$0(cst_div, _aZ_, _a0_, _a1_);}
   function main(_aW_, _aX_, _aY_){
    return create$0(cst_main, _aW_, _aX_, _aY_);
   }
   function fieldset(_aT_, _aU_, _aV_){
    return create$0(cst_fieldset, _aT_, _aU_, _aV_);
   }
   function footer(_aQ_, _aR_, _aS_){
    return create$0(cst_footer, _aQ_, _aR_, _aS_);
   }
   function h1(_aN_, _aO_, _aP_){return create$0(cst_h1, _aN_, _aO_, _aP_);}
   function h2(_aK_, _aL_, _aM_){return create$0(cst_h2, _aK_, _aL_, _aM_);}
   function h3(_aH_, _aI_, _aJ_){return create$0(cst_h3, _aH_, _aI_, _aJ_);}
   function h4(_aE_, _aF_, _aG_){return create$0(cst_h4, _aE_, _aF_, _aG_);}
   function h5(_aB_, _aC_, _aD_){return create$0(cst_h5, _aB_, _aC_, _aD_);}
   function h6(_ay_, _az_, _aA_){return create$0(cst_h6, _ay_, _az_, _aA_);}
   function header(_av_, _aw_, _ax_){
    return create$0(cst_header, _av_, _aw_, _ax_);
   }
   function html(_as_, _at_, _au_){
    return create$0(cst_html, _as_, _at_, _au_);
   }
   function input(_ap_, _aq_, _ar_){
    return create$0(cst_input, _ap_, _aq_, _ar_);
   }
   function textarea(_am_, _an_, _ao_){
    return create$0(cst_textarea, _am_, _an_, _ao_);
   }
   function select(_aj_, _ak_, _al_){
    return create$0(cst_select, _aj_, _ak_, _al_);
   }
   function option(_ag_, _ah_, _ai_){
    return create$0(cst_option, _ag_, _ah_, _ai_);
   }
   function label(_ad_, _ae_, _af_){
    return create$0(cst_label, _ad_, _ae_, _af_);
   }
   function li(_aa_, _ab_, _ac_){return create$0(cst_li, _aa_, _ab_, _ac_);}
   function p(_Z_, ___, _$_){return create$0(cst_p, _Z_, ___, _$_);}
   function pre(_W_, _X_, _Y_){return create$0(cst_pre, _W_, _X_, _Y_);}
   function section(_T_, _U_, _V_){
    return create$0(cst_section, _T_, _U_, _V_);
   }
   function span(_Q_, _R_, _S_){return create$0(cst_span, _Q_, _R_, _S_);}
   function strong(_N_, _O_, _P_){return create$0(cst_strong, _N_, _O_, _P_);}
   function table(_K_, _L_, _M_){return create$0(cst_table, _K_, _L_, _M_);}
   function tbody(_H_, _I_, _J_){return create$0(cst_tbody, _H_, _I_, _J_);}
   function td(_E_, _F_, _G_){return create$0(cst_td, _E_, _F_, _G_);}
   function th(_B_, _C_, _D_){return create$0(cst_th, _B_, _C_, _D_);}
   function thead(_y_, _z_, _A_){return create$0(cst_thead, _y_, _z_, _A_);}
   function tr(_v_, _w_, _x_){return create$0(cst_tr, _v_, _w_, _x_);}
   function ul(_s_, _t_, _u_){return create$0(cst_ul, _s_, _t_, _u_);}
   function ol(_p_, _q_, _r_){return create$0(cst_ol, _p_, _q_, _r_);}
   function br(_m_, _n_, _o_){return create_childless(cst_br, _m_, _n_, _o_);}
   function hr(_j_, _k_, _l_){return create_childless(cst_hr, _j_, _k_, _l_);}
   function sexp_for_debugging(indent, sexp){
    var
     _h_ = [0, caml_call2(Base[85][13], indent, sexp)],
     _i_ = caml_call1(Base_List[28], _h_);
    return pre(0, [0, Virtual_dom_Attr[10]], _i_);
   }
   function create$1(previous, current){
    var _f_ = t_to_js(current), _g_ = t_to_js(previous);
    return caml_call2(Virtual_dom_Raw[5][3], _g_, _f_);
   }
   function apply(t, elt){return caml_call2(Virtual_dom_Raw[5][4], elt, t);}
   function is_empty(t){return caml_call1(Virtual_dom_Raw[5][5], t);}
   var Patch = [0, create$1, apply, is_empty];
   function create$2(key, tag, attrs, children){
    return [1, element_expert(-847254184, tag, key, attrs, children)];
   }
   function create_svg$0(key, tag, attrs, children){
    return [1, element_expert(4153924, tag, key, attrs, children)];
   }
   var Expert = [0, create$2, create_svg$0];
   caml_call1(Ppx_inline_test_lib_Runtime[3], cst_virtual_dom);
   caml_call1(Expect_test_collector[5][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Virtual_dom_Node);
   var
    Virtual_dom_Node =
      [0,
       [0,
        tag,
        attrs,
        key,
        with_key,
        map_attrs,
        add_style,
        add_class,
        add_classes],
       [0],
       Aliases,
       none,
       text,
       textf,
       a,
       body,
       button,
       code,
       div,
       main,
       footer,
       fieldset,
       h1,
       h2,
       h3,
       h4,
       h5,
       h6,
       header,
       html,
       input,
       textarea,
       select,
       option,
       label,
       li,
       p,
       pre,
       section,
       span,
       strong,
       table,
       tbody,
       td,
       th,
       thead,
       tr,
       ul,
       ol,
       br,
       hr,
       sexp_for_debugging,
       inner_html$0,
       inner_html_svg,
       create$0,
       create_svg,
       to_dom,
       t_to_js,
       widget,
       widget_of_module,
       Patch,
       Expert];
   runtime.caml_register_global(68, Virtual_dom_Node, cst_Virtual_dom_Node$0);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Virtual_dom__Vdom
//# unitInfo: Requires: Expect_test_collector, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib__Runtime, Ppx_module_timer_runtime, Virtual_dom__Attr
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Virtual_dom_Vdom = "Virtual_dom__Vdom",
    cst_virtual_dom = "virtual_dom";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst = "",
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib_Runtime = global_data.Ppx_inline_test_lib__Runtime,
    Virtual_dom_Attr = global_data.Virtual_dom__Attr;
   caml_call1(Ppx_module_timer_runtime[4], cst_Virtual_dom_Vdom);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_virtual_dom);
   caml_call1(Expect_test_collector[5][1], "src/vdom.ml");
   caml_call2(Ppx_inline_test_lib_Runtime[2], cst_virtual_dom, cst);
   var
    create = Virtual_dom_Attr[1],
    create_float = Virtual_dom_Attr[2],
    string_property = Virtual_dom_Attr[3],
    bool_property = Virtual_dom_Attr[4],
    property = Virtual_dom_Attr[5],
    suppress_merge_warnings = Virtual_dom_Attr[6],
    create_hook = Virtual_dom_Attr[7],
    many = Virtual_dom_Attr[8],
    many_without_merge = Virtual_dom_Attr[9],
    empty = Virtual_dom_Attr[10],
    symbol = Virtual_dom_Attr[11],
    combine = Virtual_dom_Attr[12],
    autofocus = Virtual_dom_Attr[13],
    checked = Virtual_dom_Attr[14],
    class$0 = Virtual_dom_Attr[15],
    classes = Virtual_dom_Attr[16],
    classes$0 = Virtual_dom_Attr[17],
    disabled = Virtual_dom_Attr[18],
    for$0 = Virtual_dom_Attr[19],
    href = Virtual_dom_Attr[20],
    target = Virtual_dom_Attr[21],
    id = Virtual_dom_Attr[22],
    name = Virtual_dom_Attr[23],
    placeholder = Virtual_dom_Attr[24],
    selected = Virtual_dom_Attr[25],
    hidden = Virtual_dom_Attr[26],
    readonly = Virtual_dom_Attr[27],
    style = Virtual_dom_Attr[28],
    min = Virtual_dom_Attr[29],
    max = Virtual_dom_Attr[30],
    colspan = Virtual_dom_Attr[31],
    rowspan = Virtual_dom_Attr[32],
    draggable = Virtual_dom_Attr[33],
    tabindex = Virtual_dom_Attr[34],
    type = Virtual_dom_Attr[35],
    value = Virtual_dom_Attr[36],
    value_prop = Virtual_dom_Attr[37],
    title = Virtual_dom_Attr[38],
    src = Virtual_dom_Attr[39],
    on_focus = Virtual_dom_Attr[40],
    on_blur = Virtual_dom_Attr[41],
    Unmerged_warning_mode = Virtual_dom_Attr[42],
    to_raw = Virtual_dom_Attr[43],
    on_input = Virtual_dom_Attr[44],
    on_change = Virtual_dom_Attr[45],
    on_file_input = Virtual_dom_Attr[46],
    on_click = Virtual_dom_Attr[47],
    on_contextmenu = Virtual_dom_Attr[48],
    on_double_click = Virtual_dom_Attr[49],
    on_drag = Virtual_dom_Attr[50],
    on_dragstart = Virtual_dom_Attr[51],
    on_dragend = Virtual_dom_Attr[52],
    on_dragenter = Virtual_dom_Attr[53],
    on_dragleave = Virtual_dom_Attr[54],
    on_dragover = Virtual_dom_Attr[55],
    on_drop = Virtual_dom_Attr[56],
    on_mousemove = Virtual_dom_Attr[57],
    on_mouseup = Virtual_dom_Attr[58],
    on_mousedown = Virtual_dom_Attr[59],
    on_mouseenter = Virtual_dom_Attr[60],
    on_mouseleave = Virtual_dom_Attr[61],
    on_mouseover = Virtual_dom_Attr[62],
    on_mouseout = Virtual_dom_Attr[63],
    on_keyup = Virtual_dom_Attr[64],
    on_keypress = Virtual_dom_Attr[65],
    on_keydown = Virtual_dom_Attr[66],
    on_scroll = Virtual_dom_Attr[67],
    on_submit = Virtual_dom_Attr[68],
    on_pointerdown = Virtual_dom_Attr[69],
    on_pointerup = Virtual_dom_Attr[70],
    on_mousewheel = Virtual_dom_Attr[71],
    on_copy = Virtual_dom_Attr[72],
    on_cut = Virtual_dom_Attr[73],
    on_paste = Virtual_dom_Attr[74],
    on_reset = Virtual_dom_Attr[75],
    on_animationend = Virtual_dom_Attr[76],
    Multi = Virtual_dom_Attr[77],
    Always_focus_hook = Virtual_dom_Attr[78],
    Single_focus_hook = Virtual_dom_Attr[79],
    Expert = Virtual_dom_Attr[80],
    Attr =
      [0,
       create,
       create_float,
       string_property,
       bool_property,
       property,
       suppress_merge_warnings,
       create_hook,
       many,
       many_without_merge,
       empty,
       symbol,
       combine,
       autofocus,
       checked,
       class$0,
       classes,
       classes$0,
       disabled,
       for$0,
       href,
       target,
       id,
       name,
       placeholder,
       selected,
       hidden,
       readonly,
       style,
       min,
       max,
       colspan,
       rowspan,
       draggable,
       tabindex,
       type,
       value,
       value_prop,
       title,
       src,
       on_focus,
       on_blur,
       Unmerged_warning_mode,
       to_raw,
       on_input,
       on_change,
       on_file_input,
       on_click,
       on_contextmenu,
       on_double_click,
       on_drag,
       on_dragstart,
       on_dragend,
       on_dragenter,
       on_dragleave,
       on_dragover,
       on_drop,
       on_mousemove,
       on_mouseup,
       on_mousedown,
       on_mouseenter,
       on_mouseleave,
       on_mouseover,
       on_mouseout,
       on_keyup,
       on_keypress,
       on_keydown,
       on_scroll,
       on_submit,
       on_pointerdown,
       on_pointerup,
       on_mousewheel,
       on_copy,
       on_cut,
       on_paste,
       on_reset,
       on_animationend,
       Multi,
       Always_focus_hook,
       Single_focus_hook,
       Expert];
   caml_call1(Ppx_inline_test_lib_Runtime[3], cst_virtual_dom);
   caml_call1(Expect_test_collector[5][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Virtual_dom_Vdom);
   var Virtual_dom_Vdom = [0, Attr];
   runtime.caml_register_global(12, Virtual_dom_Vdom, cst_Virtual_dom_Vdom);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Virtual_dom
//# unitInfo: Requires: Css_gen, Expect_test_collector, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib__Runtime, Ppx_module_timer_runtime, Virtual_dom__Dom_float
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Virtual_dom = "Virtual_dom",
    cst_virtual_dom = "virtual_dom";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst = "",
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib_Runtime = global_data.Ppx_inline_test_lib__Runtime,
    Virtual_dom_Dom_float = global_data.Virtual_dom__Dom_float,
    Css_gen = global_data.Css_gen;
   caml_call1(Ppx_module_timer_runtime[4], cst_Virtual_dom);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_virtual_dom);
   caml_call1(Expect_test_collector[5][1], "src/virtual_dom.ml");
   caml_call2(Ppx_inline_test_lib_Runtime[2], cst_virtual_dom, cst);
   Css_gen[94][1][1] = Virtual_dom_Dom_float[6];
   var Top_level_effects = [0];
   caml_call1(Ppx_inline_test_lib_Runtime[3], cst_virtual_dom);
   caml_call1(Expect_test_collector[5][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Virtual_dom);
   var Virtual_dom = [0, Top_level_effects];
   runtime.caml_register_global(13, Virtual_dom, cst_Virtual_dom);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
