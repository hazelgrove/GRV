// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.6.0

//# unitInfo: Provides: Moption__
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime, Moption = [0];
   runtime.caml_register_global(0, Moption, "Moption__");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Moption__Import
//# unitInfo: Requires: Expect_test_collector, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib__Runtime, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Moption_Import = "Moption__Import",
    cst_moption = "moption";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst = "",
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib_Runtime = global_data.Ppx_inline_test_lib__Runtime;
   caml_call1(Ppx_module_timer_runtime[4], cst_Moption_Import);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_moption);
   caml_call1(Expect_test_collector[5][1], "moption/src/import.ml");
   caml_call2(Ppx_inline_test_lib_Runtime[2], cst_moption, cst);
   caml_call1(Ppx_inline_test_lib_Runtime[3], cst_moption);
   caml_call1(Expect_test_collector[5][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Moption_Import);
   var Moption_Import = [0];
   runtime.caml_register_global(11, Moption_Import, cst_Moption_Import);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Moption
//# unitInfo: Requires: Base__Invariant, Core, Core__Option, Expect_test_collector, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib__Runtime, Ppx_module_timer_runtime, Sexplib0__Sexp_conv, Stdlib__Obj
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Moption$0 = "Moption",
    cst_moption$0 = "moption",
    cst_moption_src_moption_ml = "moption/src/moption.ml";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst = "",
    Core_Option = global_data.Core__Option,
    Base_Invariant = global_data.Base__Invariant,
    Core = global_data.Core,
    Sexplib0_Sexp_conv = global_data.Sexplib0__Sexp_conv,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib_Runtime = global_data.Ppx_inline_test_lib__Runtime,
    Stdlib_Obj = global_data.Stdlib__Obj;
   caml_call1(Ppx_module_timer_runtime[4], cst_Moption$0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_moption$0);
   caml_call1(Expect_test_collector[5][1], cst_moption_src_moption_ml);
   caml_call2(Ppx_inline_test_lib_Runtime[2], cst_moption$0, cst);
   var
    none = runtime.caml_obj_block(Stdlib_Obj[14], 1),
    _a_ = [0, "_"],
    _b_ = [0, cst_moption_src_moption_ml, 30, 831, 853],
    cst_Moption_get_some_exn = "Moption.get_some_exn",
    cst_moption = cst_moption$0,
    cst_Moption = cst_Moption$0;
   function create(param){return [0, none];}
   function is_none(x){return caml_call2(Core[246], x[1], none);}
   function is_some(x){return 1 - is_none(x);}
   function get_some_exn(x){
    if(! is_none(x)) return x[1];
    var _f_ = caml_call1(Sexplib0_Sexp_conv[7], cst_Moption_get_some_exn);
    return caml_call1(Core[253], _f_);
   }
   function get(t){return is_none(t) ? 0 : [0, t[1]];}
   function unsafe_get(t){return t[1];}
   function set_some(t, v){t[1] = v; return 0;}
   function set_none(t){t[1] = none; return 0;}
   function set(t, v){
    if(! v) return set_none(t);
    var v$0 = v[1];
    return set_some(t, v$0);
   }
   function sexp_of_t(sexp_of_a, t){
    var x_001 = get(t);
    return caml_call2(Core[454], sexp_of_a, x_001);
   }
   function invariant(invariant_a, t){
    function _c_(param){
     var _e_ = get(t);
     return caml_call2(Core_Option[41], _e_, invariant_a);
    }
    function _d_(x_002){
     return sexp_of_t(function(param){return _a_;}, x_002);
    }
    return caml_call4(Base_Invariant[1], _b_, t, _d_, _c_);
   }
   var
    Optional_syntax = [0, is_none, unsafe_get],
    Optional_syntax$0 = [0, Optional_syntax];
   caml_call1(Ppx_inline_test_lib_Runtime[3], cst_moption);
   caml_call1(Expect_test_collector[5][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Moption);
   var
    Moption =
      [0,
       sexp_of_t,
       invariant,
       Optional_syntax$0,
       create,
       is_none,
       is_some,
       get,
       get_some_exn,
       unsafe_get,
       set,
       set_none,
       set_some];
   runtime.caml_register_global(19, Moption, cst_Moption$0);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLjAsImZpbGUiOiJtb3B0aW9uLmNtYS5qcyIsInNvdXJjZVJvb3QiOiIiLCJuYW1lcyI6WyJub25lIiwiY3JlYXRlIiwiaXNfbm9uZSIsIngiLCJpc19zb21lIiwiZ2V0X3NvbWVfZXhuIiwiZ2V0IiwidCIsInVuc2FmZV9nZXQiLCJzZXRfc29tZSIsInYiLCJzZXRfbm9uZSIsInNldCIsInYkMCIsInNleHBfb2ZfdCIsInNleHBfb2ZfYSIsInhfMDAxIiwiaW52YXJpYW50IiwiaW52YXJpYW50X2EiLCJ4XzAwMiJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdmlzaG51cy8ub3BhbS9ncnYtdGVzdC9saWIvY29yZV9rZXJuZWwvbW9wdGlvbi9tb3B0aW9uLm1sIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0U7Ozs7Ozs7Ozs7OztHOzs7OztHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RTs7Ozs7Ozs7Ozs7OztHOzs7OztHOzs7OztHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBVW1CO0lBQWZBLE9BQWU7Ozs7OztZQUNmQyxjQUFZLFdBRFpELE1BQ29CO1lBQ3BCRSxRQUFRQyxHQUFJLDZCQUFKQSxNQUZSSCxNQUU4QjtZQUM5QkksUUFBUUQsR0FBSSxXQURaRCxRQUNRQyxHQUFtQjtZQUMzQkUsYUFBYUY7SUFBSSxLQUZqQkQsUUFFYUMsV0FBQUE7OztHQUF1RTtZQUNwRkcsSUFBSUMsR0FBSSxPQUhSTCxRQUdJSyxhQUFBQSxNQUF1QztZQUMzQ0MsV0FBV0QsR0FBSSxPQUFKQSxLQUFNO1lBQ2pCRSxTQUFTRixHQUFFRyxHQUFGSCxPQUFFRyxZQUFVO1lBQ3JCQyxTQUFTSixHQUFBQSxPQVJUUCxlQVFzQjtZQUV0QlksSUFBSUwsR0FBRUc7SUFDUixLQURRQSxHQUVFLE9BSlJDLFNBRUlKO1FBR0NNLE1BSENIO0lBR0ksT0FOVkQsU0FHSUYsR0FHQ007R0FBaUI7WUFHdEJDLFVBQVVDLFdBQVVSO0lBQVksSUFBUVMsUUFYeENWLElBV29CQztpQ0FBVlEsV0FBOEJDOztZQUV4Q0MsVUFBVUMsYUFBWVg7O0tBRVYsVUFmWkQsSUFhc0JDO0tBRVYsT0FBQSxpQ0FGRlc7SUFFd0I7aUJBREtDO0ssT0FIdkNMLDBCLGNBR3VDSzs7SUFBSyxPQUFBLG1DQUR0Qlo7R0FFYTtHQUlaO0lBQUEsc0JBdEJ2QkwsU0FJQU07SUFpQnFCOzs7Ozs7OztPQVByQk07T0FFQUc7O09BakJBaEI7T0FDQUM7T0FDQUU7T0FFQUU7T0FEQUQ7T0FFQUc7T0FJQUk7T0FGQUQ7T0FEQUY7OztFIiwic291cmNlc0NvbnRlbnQiOlsib3BlbiEgQ29yZVxub3BlbiEgSW1wb3J0XG5cbnR5cGUgJ2EgdCA9ICdhIHJlZlxuXG4oKiBCZWluZyBhIHBvaW50ZXIsIG5vIG9uZSBvdXRzaWRlIHRoaXMgbW9kdWxlIGNhbiBjb25zdHJ1Y3QgYSB2YWx1ZSB0aGF0IGlzXG4gICBbcGh5c19zYW1lXSBhcyB0aGlzIG9uZS5cblxuICAgdGhpcyBjb2RlIGlzIGR1cGxpY2F0ZWQgaW4gT3B0aW9uX2FycmF5LkNoZWFwX29wdGlvbiwgYW5kIGlmIHdlIGZpbmQgeWV0IGFub3RoZXJcbiAgIHBsYWNlIHdoZXJlIHdlIHdhbnQgaXQgd2Ugc2hvdWxkIHJlY29uc2lkZXIgbWFraW5nIGl0IHNoYXJlZC4gKilcbmxldCBub25lID0gT2JqLm9iaiAoT2JqLm5ld19ibG9jayBPYmouYWJzdHJhY3RfdGFnIDEpXG5sZXQgY3JlYXRlICgpID0gcmVmIG5vbmVcbmxldCBpc19ub25lIHggPSBwaHlzX2VxdWFsICF4IG5vbmVcbmxldCBpc19zb21lIHggPSBub3QgKGlzX25vbmUgeClcbmxldCBnZXRfc29tZV9leG4geCA9IGlmIGlzX25vbmUgeCB0aGVuIHJhaXNlX3MgWyVtZXNzYWdlIFwiTW9wdGlvbi5nZXRfc29tZV9leG5cIl0gZWxzZSAheFxubGV0IGdldCB0ID0gaWYgaXNfbm9uZSB0IHRoZW4gTm9uZSBlbHNlIFNvbWUgIXRcbmxldCB1bnNhZmVfZ2V0IHQgPSAhdFxubGV0IHNldF9zb21lIHQgdiA9IHQgOj0gdlxubGV0IHNldF9ub25lIHQgPSB0IDo9IG5vbmVcblxubGV0IHNldCB0IHYgPVxuICBtYXRjaCB2IHdpdGhcbiAgfCBOb25lIC0+IHNldF9ub25lIHRcbiAgfCBTb21lIHYgLT4gc2V0X3NvbWUgdCB2XG47O1xuXG5sZXQgc2V4cF9vZl90IHNleHBfb2ZfYSB0ID0gWyVzZXhwIChnZXQgdCA6IGEgb3B0aW9uKV1cblxubGV0IGludmFyaWFudCBpbnZhcmlhbnRfYSB0ID1cbiAgSW52YXJpYW50LmludmFyaWFudCBbJWhlcmVdIHQgWyVzZXhwX29mOiBfIHRdIChmdW4gKCkgLT5cbiAgICBPcHRpb24uaXRlciAoZ2V0IHQpIH5mOmludmFyaWFudF9hKVxuOztcblxubW9kdWxlIE9wdGlvbmFsX3N5bnRheCA9IHN0cnVjdFxuICBtb2R1bGUgT3B0aW9uYWxfc3ludGF4ID0gc3RydWN0XG4gICAgbGV0IGlzX25vbmUgPSBpc19ub25lXG4gICAgbGV0IHVuc2FmZV92YWx1ZSA9IHVuc2FmZV9nZXRcbiAgZW5kXG5lbmRcbiJdfQ==
