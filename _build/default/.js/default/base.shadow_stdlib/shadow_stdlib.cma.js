// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.6.0

//# unitInfo: Provides: Shadow_stdlib
//# unitInfo: Requires: Caml
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    global_data = runtime.caml_get_global_data(),
    Caml = global_data.Caml,
    invalid_arg = Caml[1],
    failwith = Caml[2],
    Exit = Caml[3],
    Not_found = Caml[8],
    min = Caml[16],
    max = Caml[17],
    abs = Caml[18],
    max_int = Caml[19],
    min_int = Caml[20],
    lnot = Caml[21],
    infinity = Caml[22],
    neg_infinity = Caml[23],
    nan = Caml[24],
    max_float = Caml[25],
    min_float = Caml[26],
    epsilon_float = Caml[27],
    symbol = Caml[28],
    char_of_int = Caml[29],
    string_of_bool = Caml[30],
    bool_of_string_opt = Caml[31],
    bool_of_string = Caml[32],
    string_of_int = Caml[33],
    int_of_string_opt = Caml[34],
    string_of_float = Caml[35],
    float_of_string_opt = Caml[36],
    symbol$0 = Caml[37],
    stdin = Caml[38],
    stdout = Caml[39],
    stderr = Caml[40],
    print_char = Caml[41],
    print_string = Caml[42],
    print_bytes = Caml[43],
    print_int = Caml[44],
    print_float = Caml[45],
    print_endline = Caml[46],
    print_newline = Caml[47],
    prerr_char = Caml[48],
    prerr_string = Caml[49],
    prerr_bytes = Caml[50],
    prerr_int = Caml[51],
    prerr_float = Caml[52],
    prerr_endline = Caml[53],
    prerr_newline = Caml[54],
    read_line = Caml[55],
    read_int_opt = Caml[56],
    read_int = Caml[57],
    read_float_opt = Caml[58],
    read_float = Caml[59],
    open_out = Caml[60],
    open_out_bin = Caml[61],
    open_out_gen = Caml[62],
    flush = Caml[63],
    flush_all = Caml[64],
    output_char = Caml[65],
    output_string = Caml[66],
    output_bytes = Caml[67],
    output = Caml[68],
    output_substring = Caml[69],
    output_byte = Caml[70],
    output_binary_int = Caml[71],
    output_value = Caml[72],
    seek_out = Caml[73],
    pos_out = Caml[74],
    out_channel_length = Caml[75],
    close_out = Caml[76],
    close_out_noerr = Caml[77],
    set_binary_mode_out = Caml[78],
    open_in = Caml[79],
    open_in_bin = Caml[80],
    open_in_gen = Caml[81],
    input_char = Caml[82],
    input_line = Caml[83],
    input = Caml[84],
    really_input = Caml[85],
    really_input_string = Caml[86],
    input_byte = Caml[87],
    input_binary_int = Caml[88],
    input_value = Caml[89],
    seek_in = Caml[90],
    pos_in = Caml[91],
    in_channel_length = Caml[92],
    close_in = Caml[93],
    close_in_noerr = Caml[94],
    set_binary_mode_in = Caml[95],
    string_of_format = Caml[97],
    symbol$1 = Caml[98],
    exit = Caml[99],
    at_exit = Caml[100],
    valid_float_lexem = Caml[101],
    unsafe_really_input = Caml[102],
    do_at_exit = Caml[103],
    do_domain_local_at_exit = Caml[104],
    Shadow_stdlib =
      [0,
       invalid_arg,
       failwith,
       Exit,
       Not_found,
       min,
       max,
       abs,
       max_int,
       min_int,
       lnot,
       infinity,
       neg_infinity,
       nan,
       max_float,
       min_float,
       epsilon_float,
       symbol,
       char_of_int,
       string_of_bool,
       bool_of_string_opt,
       bool_of_string,
       string_of_int,
       int_of_string_opt,
       string_of_float,
       float_of_string_opt,
       symbol$0,
       stdin,
       stdout,
       stderr,
       print_char,
       print_string,
       print_bytes,
       print_int,
       print_float,
       print_endline,
       print_newline,
       prerr_char,
       prerr_string,
       prerr_bytes,
       prerr_int,
       prerr_float,
       prerr_endline,
       prerr_newline,
       read_line,
       read_int_opt,
       read_int,
       read_float_opt,
       read_float,
       open_out,
       open_out_bin,
       open_out_gen,
       flush,
       flush_all,
       output_char,
       output_string,
       output_bytes,
       output,
       output_substring,
       output_byte,
       output_binary_int,
       output_value,
       seek_out,
       pos_out,
       out_channel_length,
       close_out,
       close_out_noerr,
       set_binary_mode_out,
       open_in,
       open_in_bin,
       open_in_gen,
       input_char,
       input_line,
       input,
       really_input,
       really_input_string,
       input_byte,
       input_binary_int,
       input_value,
       seek_in,
       pos_in,
       in_channel_length,
       close_in,
       close_in_noerr,
       set_binary_mode_in,
       string_of_format,
       symbol$1,
       exit,
       at_exit,
       valid_float_lexem,
       unsafe_really_input,
       do_at_exit,
       do_domain_local_at_exit];
   runtime.caml_register_global(1, Shadow_stdlib, "Shadow_stdlib");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLjAsImZpbGUiOiJzaGFkb3dfc3RkbGliLmNtYS5qcyIsInNvdXJjZVJvb3QiOiIiLCJuYW1lcyI6W10sInNvdXJjZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RSIsInNvdXJjZXNDb250ZW50IjpbXX0=
