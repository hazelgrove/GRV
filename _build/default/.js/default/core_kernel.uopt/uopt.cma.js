// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.6.0

//# unitInfo: Provides: Uopt
//# unitInfo: Requires: Core, Expect_test_collector, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib__Runtime, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Uopt$0 = "Uopt",
    cst_uopt$0 = "uopt";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst = "",
    none = "Uopt.none",
    Core = global_data.Core,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib_Runtime = global_data.Ppx_inline_test_lib__Runtime;
   caml_call1(Ppx_module_timer_runtime[4], cst_Uopt$0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_uopt$0);
   caml_call1(Expect_test_collector[5][1], "uopt/src/uopt.ml");
   caml_call2(Ppx_inline_test_lib_Runtime[2], cst_uopt$0, cst);
   var
    cst_Uopt_value_exn = "Uopt.value_exn",
    _a_ = [0, "None"],
    _b_ = [0, "Some"],
    cst_uopt = cst_uopt$0,
    cst_Uopt = cst_Uopt$0;
   function some(x){return x;}
   function unsafe_value(x){return x;}
   function is_none(t){return caml_call2(Core[246], t, none);}
   function is_some(t){return 1 - is_none(t);}
   function invariant(invariant_a, t){
    var _c_ = is_some(t);
    return _c_ ? caml_call1(invariant_a, t) : _c_;
   }
   function sexp_of_t(sexp_of_a, t){
    return is_none(t) ? _a_ : [1, [0, _b_, [0, caml_call1(sexp_of_a, t), 0]]];
   }
   function value_exn(t){
    return is_none(t) ? caml_call1(Core[6], cst_Uopt_value_exn) : t;
   }
   function to_option(t){return is_none(t) ? 0 : [0, t];}
   function of_option(param){
    if(! param) return none;
    var a = param[1];
    return a;
   }
   var
    Optional_syntax = [0, is_none, unsafe_value],
    Optional_syntax$0 = [0, Optional_syntax];
   caml_call1(Ppx_inline_test_lib_Runtime[3], cst_uopt);
   caml_call1(Expect_test_collector[5][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Uopt);
   var
    Uopt =
      [0,
       sexp_of_t,
       invariant,
       none,
       some,
       is_none,
       is_some,
       value_exn,
       unsafe_value,
       to_option,
       of_option,
       Optional_syntax$0];
   runtime.caml_register_global(16, Uopt, cst_Uopt$0);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLjAsImZpbGUiOiJ1b3B0LmNtYS5qcyIsInNvdXJjZVJvb3QiOiIiLCJuYW1lcyI6WyJub25lIiwic29tZSIsIngiLCJ1bnNhZmVfdmFsdWUiLCJpc19ub25lIiwidCIsImlzX3NvbWUiLCJpbnZhcmlhbnQiLCJpbnZhcmlhbnRfYSIsInNleHBfb2ZfdCIsInNleHBfb2ZfYSIsInZhbHVlX2V4biIsInRvX29wdGlvbiIsIm9mX29wdGlvbiIsImEiXSwic291cmNlcyI6WyIvVXNlcnMvc3Zpc2hudXMvLm9wYW0vZ3J2LXRlc3QvbGliL2NvcmVfa2VybmVsL3VvcHQvdW9wdC5tbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0c7Ozs7O0c7Ozs7Ozs7O0lBT0lBOzs7Ozs7Ozs7Ozs7Ozs7OztZQUNBQyxLQUFNQyxHQUFpQixPQUFqQkEsRUFBNEI7WUFDbENDLGFBQWNELEdBQWlCLE9BQWpCQSxFQUE0QjtZQUMxQ0UsUUFBUUMsR0FBSSw2QkFBSkEsR0FIUkwsTUFHNkI7WUFDN0JNLFFBQVFELEdBQUksV0FEWkQsUUFDUUMsR0FBbUI7WUFDM0JFLFVBQVVDLGFBQVlIO0lBQU8sVUFEN0JDLFFBQ3NCRDtJQUFPLGFBQTJCLFdBQTlDRyxhQUFZSDtHQUFrRDtZQUV4RUksVUFBVUMsV0FBVUw7SUFDdEIsT0FMRUQsUUFJb0JDLHVDQUFWSyxXQUFVTDtHQUMrQztZQUduRU0sVUFBVU47SUFBSSxPQVJkRCxRQVFVQyxLQUFzQiwwQ0FBdEJBO0dBQW1FO1lBQzdFTyxVQUFVUCxHQUFJLE9BVGRELFFBU1VDLGFBQUFBLEdBQXFEO1lBRS9EUTtJQUFZLG1CQWRaYjtRQWdCS2M7SUFBSyxPQUFMQTtHQUFXO0dBSU87SUFBQSxzQkFqQnZCVixTQURBRDtJQWlCcUI7Ozs7Ozs7O09BWnJCTTtPQUZBRjtPQUxBUDtPQUNBQztPQUVBRztPQUNBRTtPQU9BSztPQVRBUjtPQVVBUztPQUVBQzs7OztFIiwic291cmNlc0NvbnRlbnQiOlsib3BlbiBDb3JlXG5cbnR5cGUgKydhIHRcblxuKCogVGhpcyBbT2JqLm1hZ2ljXSBpcyBPSyBiZWNhdXNlIHdlIG5ldmVyIGFsbG93IHVzZXIgY29kZSBhY2Nlc3MgdG8gW25vbmVdIChleGNlcHQgdmlhXG4gICBbdW5zYWZlX3ZhbHVlXSkuICBXZSBkaXNhbGxvdyBbXyBVb3B0LnQgVW9wdC50XSwgc28gdGhlcmUgaXMgbm8gY2hhbmNlIG9mIGNvbmZ1c2luZ1xuICAgW25vbmVdIHdpdGggW3NvbWUgbm9uZV0uICBBbmQgW2Zsb2F0IFVvcHQudCBhcnJheV0gaXMgc2ltaWxhcmx5IGRpc2FsbG93ZWQuICopXG5sZXQgbm9uZSA6ICdhIHQgPSBPYmoubWFnaWMgXCJVb3B0Lm5vbmVcIlxubGV0IHNvbWUgKHggOiAnYSkgOiAnYSB0ID0gT2JqLm1hZ2ljIHhcbmxldCB1bnNhZmVfdmFsdWUgKHggOiAnYSB0KSA6ICdhID0gT2JqLm1hZ2ljIHhcbmxldCBpc19ub25lIHQgPSBwaHlzX2VxdWFsIHQgbm9uZVxubGV0IGlzX3NvbWUgdCA9IG5vdCAoaXNfbm9uZSB0KVxubGV0IGludmFyaWFudCBpbnZhcmlhbnRfYSB0ID0gaWYgaXNfc29tZSB0IHRoZW4gaW52YXJpYW50X2EgKHVuc2FmZV92YWx1ZSB0KVxuXG5sZXQgc2V4cF9vZl90IHNleHBfb2ZfYSB0ID1cbiAgaWYgaXNfbm9uZSB0IHRoZW4gWyVzZXhwIE5vbmVdIGVsc2UgWyVzZXhwIFNvbWUgKHVuc2FmZV92YWx1ZSB0IDogYSldXG47O1xuXG5sZXQgdmFsdWVfZXhuIHQgPSBpZiBpc19ub25lIHQgdGhlbiBmYWlsd2l0aCBcIlVvcHQudmFsdWVfZXhuXCIgZWxzZSB1bnNhZmVfdmFsdWUgdFxubGV0IHRvX29wdGlvbiB0ID0gaWYgaXNfbm9uZSB0IHRoZW4gTm9uZSBlbHNlIFNvbWUgKHVuc2FmZV92YWx1ZSB0KVxuXG5sZXQgb2Zfb3B0aW9uID0gZnVuY3Rpb25cbiAgfCBOb25lIC0+IG5vbmVcbiAgfCBTb21lIGEgLT4gc29tZSBhXG47O1xuXG5tb2R1bGUgT3B0aW9uYWxfc3ludGF4ID0gc3RydWN0XG4gIG1vZHVsZSBPcHRpb25hbF9zeW50YXggPSBzdHJ1Y3RcbiAgICBsZXQgaXNfbm9uZSA9IGlzX25vbmVcbiAgICBsZXQgdW5zYWZlX3ZhbHVlID0gdW5zYWZlX3ZhbHVlXG4gIGVuZFxuZW5kXG4iXX0=
